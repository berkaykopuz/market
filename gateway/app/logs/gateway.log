2024-05-11 13:22:26.898 DEBUG [main] [org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:263)] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [GatewayApplicationTests]: using SpringBootContextLoader
2024-05-11 13:22:26.917 DEBUG [main] [org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:271)] - Could not detect default resource locations for test class [com.toyota.gateway.GatewayApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2024-05-11 13:22:26.918 INFO [main] [org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83)] - Could not detect default configuration classes for test class [com.toyota.gateway.GatewayApplicationTests]: GatewayApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-05-11 13:22:26.934 DEBUG [main] [org.springframework.test.context.support.AbstractTestContextBootstrapper.getContextCustomizerFactories(AbstractTestContextBootstrapper.java:432)] - Using ContextCustomizerFactory implementations for test class [GatewayApplicationTests]: [ImportsContextCustomizerFactory, ExcludeFilterContextCustomizerFactory, HttpGraphQlTesterContextCustomizerFactory, DuplicateJsonObjectContextCustomizerFactory, MockitoContextCustomizerFactory, TestRestTemplateContextCustomizerFactory, WebTestClientContextCustomizerFactory, OverrideAutoConfigurationContextCustomizerFactory, ObservabilityContextCustomizerFactory, TypeExcludeFiltersContextCustomizerFactory, PropertyMappingContextCustomizerFactory, WebDriverContextCustomizerFactory, MockServerContainerContextCustomizerFactory, DynamicPropertiesContextCustomizerFactory]
2024-05-11 13:22:26.959 DEBUG [main] [org.springframework.test.context.support.AbstractTestContextBootstrapper.getContextCustomizers(AbstractTestContextBootstrapper.java:370)] - Using ContextCustomizers for test class [GatewayApplicationTests]: [ExcludeFilterContextCustomizer, DuplicateJsonObjectContextCustomizer, MockitoContextCustomizer, TestRestTemplateContextCustomizer, WebTestClientContextCustomizer, DisableObservabilityContextCustomizer, PropertyMappingContextCustomizer, WebDriverContextCustomizer]
2024-05-11 13:22:27.044 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\GatewayApplication.class]
2024-05-11 13:22:27.046 INFO [main] [org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:234)] - Found @SpringBootConfiguration com.toyota.gateway.GatewayApplication for test class com.toyota.gateway.GatewayApplicationTests
2024-05-11 13:22:27.143 DEBUG [main] [org.springframework.test.context.util.TestContextFailureHandler.handleFailure(TestContextFailureHandler.java:43)] - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom TestExecutionListener classes or make the default TestExecutionListener classes and their required dependencies available. Offending class: jakarta/servlet/ServletContext
2024-05-11 13:22:27.147 DEBUG [main] [org.springframework.test.context.util.TestContextFailureHandler.handleFailure(TestContextFailureHandler.java:43)] - Skipping candidate TestExecutionListener [org.springframework.test.context.observation.MicrometerObservationRegistryTestExecutionListener] due to a missing dependency. Specify custom TestExecutionListener classes or make the default TestExecutionListener classes and their required dependencies available. Offending class: io.micrometer.context.ThreadLocalAccessor. MicrometerObservationRegistryTestExecutionListener requires io.micrometer:micrometer-observation:1.10.8 or higher and io.micrometer:context-propagation:1.0.3 or higher.
2024-05-11 13:22:27.149 DEBUG [main] [org.springframework.test.context.util.TestContextFailureHandler.handleFailure(TestContextFailureHandler.java:43)] - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom TestExecutionListener classes or make the default TestExecutionListener classes and their required dependencies available. Offending class: org/springframework/transaction/TransactionDefinition
2024-05-11 13:22:27.151 DEBUG [main] [org.springframework.test.context.util.TestContextFailureHandler.handleFailure(TestContextFailureHandler.java:43)] - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom TestExecutionListener classes or make the default TestExecutionListener classes and their required dependencies available. Offending class: org/springframework/transaction/interceptor/TransactionAttribute
2024-05-11 13:22:27.154 DEBUG [main] [org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:182)] - Using TestExecutionListeners for test class [GatewayApplicationTests]: [DirtiesContextBeforeModesTestExecutionListener, ApplicationEventsTestExecutionListener, MockitoTestExecutionListener, DependencyInjectionTestExecutionListener, DirtiesContextTestExecutionListener, EventPublishingTestExecutionListener, ResetMocksTestExecutionListener, RestDocsTestExecutionListener, MockRestServiceServerResetTestExecutionListener, MockMvcPrintOnlyOnFailureTestExecutionListener, WebDriverTestExecutionListener, MockWebServiceServerTestExecutionListener]
2024-05-11 13:22:27.157 DEBUG [main] [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:154)] - Before test class: class [GatewayApplicationTests], class annotated with @DirtiesContext [false] with mode [null]
2024-05-11 13:22:27.170 DEBUG [main] [org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:92)] - Performing dependency injection for test class com.toyota.gateway.GatewayApplicationTests
2024-05-11 13:22:27.581 DEBUG [background-preinit] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:162)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-11 13:22:27.582 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-11 13:22:27.590 DEBUG [background-preinit] [org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:122)] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-05-11 13:22:27.591 DEBUG [background-preinit] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:61)] - Trying to load META-INF/validation.xml via TCCL
2024-05-11 13:22:27.592 DEBUG [background-preinit] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:67)] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-05-11 13:22:27.593 DEBUG [background-preinit] [org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:129)] - No META-INF/validation.xml found. Using annotation based configuration only.
2024-05-11 13:22:27.599 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:61)] - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-05-11 13:22:27.622 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplicationTests using Java 17.0.8 with PID 11092 (started by Berkay Kopuz in C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway)
2024-05-11 13:22:27.623 DEBUG [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:51)] - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-05-11 13:22:27.624 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-11 13:22:27.625 DEBUG [main] [org.springframework.boot.SpringApplication.load(SpringApplication.java:687)] - Loading source class com.toyota.gateway.GatewayApplication
2024-05-11 13:22:27.629 DEBUG [background-preinit] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.buildExpressionFactory(ResourceBundleMessageInterpolator.java:175)] - Loaded expression factory via original TCCL
2024-05-11 13:22:27.672 DEBUG [main] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:671)] - Refreshing org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285
2024-05-11 13:22:27.701 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-05-11 13:22:27.725 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-05-11 13:22:27.779 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\config\AppConfig.class]
2024-05-11 13:22:27.786 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.determinePropertyNodeNameProvider(ValidatorFactoryConfigurationHelper.java:355)] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2024-05-11 13:22:27.789 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\exception\GlobalExceptionHandler.class]
2024-05-11 13:22:27.794 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\filter\ReportFilter.class]
2024-05-11 13:22:27.795 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\filter\RouteValidator.class]
2024-05-11 13:22:27.799 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\filter\SellingFilter.class]
2024-05-11 13:22:27.801 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:447)] - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2024-05-11 13:22:27.801 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:448)] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2024-05-11 13:22:27.801 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:449)] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2024-05-11 13:22:27.801 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:450)] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2024-05-11 13:22:27.802 DEBUG [background-preinit] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:451)] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2024-05-11 13:22:27.802 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\filter\UserManagementFilter.class]
2024-05-11 13:22:27.804 DEBUG [main] [org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:476)] - Identified candidate component class: file [C:\Users\Berkay Kopuz\Desktop\Projelerim\Toyota\market\gateway\target\classes\com\toyota\gateway\util\JwtUtil.class]
2024-05-11 13:22:28.555 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'refreshScope'
2024-05-11 13:22:28.561 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer'
2024-05-11 13:22:28.649 DEBUG [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:278)] - Generating bean factory id from names: [adaptCachedBodyGlobalFilter, addRequestHeaderGatewayFilterFactory, addRequestHeadersIfNotPresentGatewayFilterFactory, addRequestParameterGatewayFilterFactory, addResponseHeaderGatewayFilterFactory, afterRoutePredicateFactory, appConfig, applicationAvailability, applicationTaskExecutor, beforeRoutePredicateFactory, betweenRoutePredicateFactory, blockingLoadBalancerClient, cacheRequestBodyGatewayFilterFactory, cachedCompositeRouteLocator, caffeineWarnLogger, cloudFoundryRouteServiceRoutePredicateFactory, compositeCompatibilityVerifier, compositeDiscoveryClient, configDataContextRefresher, configurableHintsRegistrationProcessor, configurationPropertiesBeans, configurationPropertiesRebinder, cookieRoutePredicateFactory, corsGatewayFilterApplicationListener, dedupeResponseHeaderGatewayFilterFactory, default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification, default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification, defaultCodecCustomizer, defaultEurekaClientHttpRequestFactorySupplier, defaultLoadBalancerCacheManager, defaultPartHttpMessageReaderCustomizer, defaultValidator, defaultsBindHandlerAdvisor, discoveryClient, discoveryClientRouteDefinitionLocator, discoveryLocatorProperties, environmentManager, errorAttributes, errorWebExceptionHandler, eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties, eurekaApplicationInfoManager, eurekaAutoServiceRegistration, eurekaClient, eurekaClientConfigBean, eurekaFeature, eurekaInstanceConfigBean, eurekaLoadBalancerProperties, eurekaReactiveDiscoveryClient, eurekaRegistration, eurekaServiceRegistry, exchangeStrategiesCustomizer, fileWatcher, filteringWebHandler, forceAutoProxyCreatorToUseClassProxying, forwardPathFilter, forwardRoutingFilter, forwardedHeadersFilter, gRPCRequestHeadersFilter, gRPCResponseHeadersFilter, gatewayApplication, gatewayConfigurationService, gatewayHttpClientFactory, gatewayLoadBalancerClientFilter, gatewayProperties, globalCorsProperties, globalExceptionHandler, gson, gsonBuilder, gzipMessageBodyResolver, handlerFunctionAdapter, headerRoutePredicateFactory, hostRoutePredicateFactory, httpClientProperties, httpClientSslConfigurer, httpHandler, inMemoryRouteDefinitionRepository, inetUtils, inetUtilsProperties, jacksonCodecCustomizer, jacksonObjectMapper, jacksonObjectMapperBuilder, jsonComponentModule, jsonMixinModule, jsonMixinModuleEntries, jwtUtil, keyValueConverter, lbRestClientPostProcessor, lifecycleProcessor, loadBalancedRestTemplateInitializerDeprecated, loadBalancerChildContextInitializer, loadBalancerClientFactory, loadBalancerClientsDefaultsMappingsProvider, loadBalancerEagerContextInitializer, loadBalancerExchangeFilterFunction, loadBalancerInterceptor, loadBalancerRequestFactory, loadBalancerServiceInstanceCookieFilter, loadBalancerServiceInstanceCookieTransformer, loadBalancerWebClientBuilderBeanPostProcessor, localeContextResolver, loggingRebinder, mapRequestHeaderGatewayFilterFactory, methodRoutePredicateFactory, methodValidationPostProcessor, modifyRequestBodyGatewayFilterFactory, modifyResponseBodyGatewayFilterFactory, nettyReactiveWebServerFactory, nettyWebServerFactoryCustomizer, nettyWriteResponseFilter, org.springframework.boot.autoconfigure.AutoConfigurationPackages, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig, org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty, org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration, org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig, org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration, org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty, org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration, org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.properties.BoundConfigurationProperties, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter, org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor, org.springframework.boot.test.mock.mockito.MockitoPostProcessor, org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor, org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration, org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer, org.springframework.cloud.client.CommonsClientAutoConfiguration, org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration, org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration, org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration, org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig, org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration, org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration, org.springframework.cloud.commons.util.UtilAutoConfiguration, org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration, org.springframework.cloud.gateway.config.GatewayAutoConfiguration, org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration, org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration, org.springframework.cloud.gateway.config.GatewayReactiveLoadBalancerClientAutoConfiguration, org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration, org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration$ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration, org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration, org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher, org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration, org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration, org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClientConfiguration, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.event.internalEventListenerFactory, org.springframework.context.event.internalEventListenerProcessor, parameterNamesModule, pathRoutePredicateFactory, prefixPathGatewayFilterFactory, preserveHostHeaderGatewayFilterFactory, propertiesRouteDefinitionLocator, propertySourcesPlaceholderConfigurer, queryRoutePredicateFactory, reactiveCompositeDiscoveryClient, reactiveWebServerFactoryCustomizer, reactorClientHttpConnectorFactory, reactorDeferringLoadBalancerExchangeFilterFunction, reactorNettyRequestUpgradeStrategy, reactorNettyWebSocketClient, reactorResourceFactory, readBodyPredicateFactory, redirectToGatewayFilterFactory, refreshEventListener, refreshScope, refreshScopeLifecycle, remoteAddrRoutePredicateFactory, removeCachedBodyFilter, removeHopByHopHeadersFilter, removeJsonAttributesResponseBodyGatewayFilterFactory, removeRequestHeaderGatewayFilterFactory, removeRequestParameterGatewayFilterFactory, removeResponseHeaderGatewayFilterFactory, reportFilter, requestHeaderSizeGatewayFilterFactory, requestHeaderToRequestUriGatewayFilterFactory, requestMappingHandlerAdapter, requestMappingHandlerMapping, requestSizeGatewayFilterFactory, resourceHandlerMapping, resourceUrlProvider, responseBodyResultHandler, responseEntityResultHandler, responseStatusExceptionHandler, restTemplateCustomizer, restTemplateDiscoveryClientOptionalArgs, restTemplateTransportClientFactories, retryGatewayFilterFactory, rewriteLocationResponseHeaderGatewayFilterFactory, rewritePathGatewayFilterFactory, rewriteRequestParameterGatewayFilterFactory, rewriteResponseHeaderGatewayFilterFactory, routeDefinitionLocator, routeDefinitionRouteLocator, routeLocatorBuilder, routePredicateHandlerMapping, routeRefreshListener, routeToRequestUrlFilter, routeValidator, routerFunctionMapping, routingFilter, saveSessionGatewayFilterFactory, scopedTarget.eurekaApplicationInfoManager, scopedTarget.eurekaClient, scopedTarget.eurekaRegistration, secureHeadersGatewayFilterFactory, secureHeadersProperties, sellingFilter, server-org.springframework.boot.autoconfigure.web.ServerProperties, serverCodecConfigurer, serverResponseResultHandler, serviceManagementMetadataProvider, setPathGatewayFilterFactory, setRequestHeaderGatewayFilterFactory, setRequestHostHeaderGatewayFilterFactory, setResponseHeaderGatewayFilterFactory, setStatusGatewayFilterFactory, simpleAsyncTaskExecutorBuilder, simpleAsyncTaskSchedulerBuilder, simpleDiscoveryClient, simpleDiscoveryProperties, simpleHandlerAdapter, simpleReactiveDiscoveryClient, simpleReactiveDiscoveryProperties, sleuthPresentVerifier, spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties, spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties, spring.cloud.gateway.loadbalancer-org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties, spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties, spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties, spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties, spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties, spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties, spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties, spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties, spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties, spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties, spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, spring.web-org.springframework.boot.autoconfigure.web.WebProperties, spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties, spring.webflux.multipart-org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties, springBootVersionVerifier, sslBundleRegistry, sslPropertiesSslBundleRegistrar, standardGsonBuilderCustomizer, standardJacksonObjectMapperBuilderCustomizer, stringToZonedDateTimeConverter, stripPrefixGatewayFilterFactory, taskExecutorBuilder, taskSchedulerBuilder, template, threadPoolTaskExecutorBuilder, threadPoolTaskSchedulerBuilder, tlsProperties, transferEncodingNormalizationHeadersFilter, userManagementFilter, viewResolutionResultHandler, webClientBuilder, webClientHttpConnector, webClientHttpConnectorCustomizer, webClientSsl, webFluxAdapterRegistry, webFluxContentTypeResolver, webFluxConversionService, webFluxValidator, webFluxWebSocketHandlerAdapter, webHandler, webServerFactoryCustomizerBeanPostProcessor, webSessionIdResolver, webSessionManager, webSocketService, websocketRoutingFilter, weightCalculatorWebFilter, weightRoutePredicateFactory, welcomePageRouterFunctionMapping, xForwardedHeadersFilter, xForwardedRemoteAddrRoutePredicateFactory, xForwarderHeadersTransformer, zoneConfig]
2024-05-11 13:22:28.663 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=e811b584-464e-3f63-bc8e-d3a3cba3c92a
2024-05-11 13:22:28.665 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-05-11 13:22:28.673 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoPostProcessor'
2024-05-11 13:22:28.681 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-05-11 13:22:28.716 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-05-11 13:22:28.720 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'forceAutoProxyCreatorToUseClassProxying'
2024-05-11 13:22:28.723 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-05-11 13:22:28.731 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor'
2024-05-11 13:22:28.733 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-05-11 13:22:28.735 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-05-11 13:22:28.742 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-05-11 13:22:28.743 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-05-11 13:22:28.745 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'methodValidationPostProcessor'
2024-05-11 13:22:28.751 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
2024-05-11 13:22:28.753 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-05-11 13:22:28.776 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-05-11 13:22:28.781 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-05-11 13:22:28.783 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'configurationPropertiesBeans'
2024-05-11 13:22:28.786 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'lbRestClientPostProcessor'
2024-05-11 13:22:28.786 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig'
2024-05-11 13:22:28.787 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-11 13:22:28.788 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerInterceptor'
2024-05-11 13:22:28.789 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'blockingLoadBalancerClient'
2024-05-11 13:22:28.790 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration'
2024-05-11 13:22:28.790 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.791 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerClientFactory'
2024-05-11 13:22:28.792 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration'
2024-05-11 13:22:28.792 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.793 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties'
2024-05-11 13:22:28.796 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-05-11 13:22:28.798 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'defaultsBindHandlerAdvisor'
2024-05-11 13:22:28.799 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration'
2024-05-11 13:22:28.799 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.801 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerClientsDefaultsMappingsProvider'
2024-05-11 13:22:28.801 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration'
2024-05-11 13:22:28.803 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.803 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$901/0x000002533c46ec90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.805 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'defaultsBindHandlerAdvisor' via factory method to bean named 'loadBalancerClientsDefaultsMappingsProvider'
2024-05-11 13:22:28.806 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.814 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.814 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerClientFactory' via factory method to bean named 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties'
2024-05-11 13:22:28.819 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification'
2024-05-11 13:22:28.822 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.822 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification'
2024-05-11 13:22:28.823 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.824 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification'
2024-05-11 13:22:28.824 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.826 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.826 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'blockingLoadBalancerClient' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:28.829 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.830 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerRequestFactory'
2024-05-11 13:22:28.831 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration'
2024-05-11 13:22:28.836 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerServiceInstanceCookieTransformer'
2024-05-11 13:22:28.837 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerServiceInstanceCookieTransformer' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:28.838 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.839 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'xForwarderHeadersTransformer'
2024-05-11 13:22:28.840 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'xForwarderHeadersTransformer' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:28.840 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.841 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.842 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerRequestFactory' via factory method to bean named 'blockingLoadBalancerClient'
2024-05-11 13:22:28.843 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.844 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'blockingLoadBalancerClient'
2024-05-11 13:22:28.845 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'loadBalancerRequestFactory'
2024-05-11 13:22:28.847 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.848 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'lbRestClientPostProcessor' via factory method to bean named 'loadBalancerInterceptor'
2024-05-11 13:22:28.848 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'lbRestClientPostProcessor' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:28.849 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerWebClientBuilderBeanPostProcessor'
2024-05-11 13:22:28.849 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration'
2024-05-11 13:22:28.850 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-11 13:22:28.851 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactorDeferringLoadBalancerExchangeFilterFunction'
2024-05-11 13:22:28.851 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig'
2024-05-11 13:22:28.852 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.856 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-11 13:22:28.857 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerWebClientBuilderBeanPostProcessor' via factory method to bean named 'reactorDeferringLoadBalancerExchangeFilterFunction'
2024-05-11 13:22:28.857 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerWebClientBuilderBeanPostProcessor' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:28.861 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gatewayApplication'
2024-05-11 13:22:28.864 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'appConfig'
2024-05-11 13:22:28.865 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'globalExceptionHandler'
2024-05-11 13:22:28.867 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reportFilter'
2024-05-11 13:22:28.870 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routeValidator'
2024-05-11 13:22:28.872 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'jwtUtil'
2024-05-11 13:22:28.873 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reportFilter' via constructor to bean named 'routeValidator'
2024-05-11 13:22:28.873 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reportFilter' via constructor to bean named 'jwtUtil'
2024-05-11 13:22:28.876 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'sellingFilter'
2024-05-11 13:22:28.878 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'sellingFilter' via constructor to bean named 'routeValidator'
2024-05-11 13:22:28.879 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'sellingFilter' via constructor to bean named 'jwtUtil'
2024-05-11 13:22:28.880 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'userManagementFilter'
2024-05-11 13:22:28.883 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'userManagementFilter' via constructor to bean named 'routeValidator'
2024-05-11 13:22:28.883 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'userManagementFilter' via constructor to bean named 'jwtUtil'
2024-05-11 13:22:28.885 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'template'
2024-05-11 13:22:28.926 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-05-11 13:22:28.927 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration'
2024-05-11 13:22:28.928 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties'
2024-05-11 13:22:28.929 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-05-11 13:22:28.930 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration'
2024-05-11 13:22:28.931 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactorResourceFactory'
2024-05-11 13:22:28.932 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties'
2024-05-11 13:22:28.933 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactorResourceFactory' via factory method to bean named 'spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties'
2024-05-11 13:22:28.961 DEBUG [main] [reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254)] - Using Slf4j logging framework
2024-05-11 13:22:28.996 DEBUG [main] [io.netty.util.internal.logging.InternalLoggerFactory.useSlf4JLoggerFactory(InternalLoggerFactory.java:63)] - Using SLF4J as the default logging framework
2024-05-11 13:22:29.000 DEBUG [main] [io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:515)] - -Dio.netty.noUnsafe: false
2024-05-11 13:22:29.001 DEBUG [main] [io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:1026)] - Java version: 17
2024-05-11 13:22:29.003 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:140)] - sun.misc.Unsafe.theUnsafe: available
2024-05-11 13:22:29.004 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:164)] - sun.misc.Unsafe.copyMemory: available
2024-05-11 13:22:29.005 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:196)] - sun.misc.Unsafe.storeFence: available
2024-05-11 13:22:29.006 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:239)] - java.nio.Buffer.address: available
2024-05-11 13:22:29.007 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:325)] - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
2024-05-11 13:22:29.008 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:403)] - java.nio.Bits.unaligned: available, true
2024-05-11 13:22:29.009 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:471)] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @5427c60c
2024-05-11 13:22:29.011 DEBUG [main] [io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:501)] - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
2024-05-11 13:22:29.011 DEBUG [main] [io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1160)] - sun.misc.Unsafe: available
2024-05-11 13:22:29.012 DEBUG [main] [io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1306)] - -Dio.netty.tmpdir: C:\Users\BERKAY~1\AppData\Local\Temp (java.io.tmpdir)
2024-05-11 13:22:29.012 DEBUG [main] [io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1385)] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-05-11 13:22:29.012 DEBUG [main] [io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:1120)] - Platform: Windows
2024-05-11 13:22:29.013 DEBUG [main] [io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:176)] - -Dio.netty.maxDirectMemory: -1 bytes
2024-05-11 13:22:29.013 DEBUG [main] [io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:183)] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-05-11 13:22:29.016 DEBUG [main] [io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71)] - java.nio.ByteBuffer.cleaner(): available
2024-05-11 13:22:29.016 DEBUG [main] [io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:203)] - -Dio.netty.noPreferDirect: false
2024-05-11 13:22:29.065 DEBUG [main] [reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259)] - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=16, workerCount=16}
2024-05-11 13:22:29.065 DEBUG [main] [reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259)] - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@39266403
2024-05-11 13:22:29.066 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty'
2024-05-11 13:22:29.066 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'nettyReactiveWebServerFactory'
2024-05-11 13:22:29.067 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'nettyReactiveWebServerFactory' via factory method to bean named 'reactorResourceFactory'
2024-05-11 13:22:29.073 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactiveWebServerFactoryCustomizer'
2024-05-11 13:22:29.073 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration'
2024-05-11 13:22:29.074 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.085 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactiveWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.085 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'sslBundleRegistry'
2024-05-11 13:22:29.085 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'
2024-05-11 13:22:29.087 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-05-11 13:22:29.089 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-05-11 13:22:29.091 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'
2024-05-11 13:22:29.091 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'fileWatcher'
2024-05-11 13:22:29.093 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'
2024-05-11 13:22:29.101 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'nettyWebServerFactoryCustomizer'
2024-05-11 13:22:29.102 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration'
2024-05-11 13:22:29.103 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'nettyWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-05-11 13:22:29.103 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'nettyWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.114 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-05-11 13:22:29.115 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-05-11 13:22:29.116 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-05-11 13:22:29.119 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-05-11 13:22:29.121 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'parameterNamesModule'
2024-05-11 13:22:29.121 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-05-11 13:22:29.124 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'jsonMixinModule'
2024-05-11 13:22:29.125 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
2024-05-11 13:22:29.127 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
2024-05-11 13:22:29.127 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:29.128 DEBUG [main] [org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages.get(AutoConfigurationPackages.java:213)] - @EnableAutoConfiguration was declared on a class in the package 'com.toyota.gateway'. Automatic @Repository and @Entity scanning is enabled.
2024-05-11 13:22:29.136 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:29.137 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
2024-05-11 13:22:29.138 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'jsonComponentModule'
2024-05-11 13:22:29.138 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-05-11 13:22:29.149 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaClient'
2024-05-11 13:22:29.162 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaApplicationInfoManager'
2024-05-11 13:22:29.182 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaRegistration'
2024-05-11 13:22:29.203 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-05-11 13:22:29.204 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-05-11 13:22:29.208 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-05-11 13:22:29.210 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:29.211 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-05-11 13:22:29.214 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-05-11 13:22:29.225 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration'
2024-05-11 13:22:29.225 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'defaultCodecCustomizer'
2024-05-11 13:22:29.226 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties'
2024-05-11 13:22:29.228 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'defaultCodecCustomizer' via factory method to bean named 'spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties'
2024-05-11 13:22:29.230 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration'
2024-05-11 13:22:29.231 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'jacksonCodecCustomizer'
2024-05-11 13:22:29.231 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'jacksonCodecCustomizer' via factory method to bean named 'jacksonObjectMapper'
2024-05-11 13:22:29.232 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration'
2024-05-11 13:22:29.233 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2024-05-11 13:22:29.233 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'defaultValidator'
2024-05-11 13:22:29.234 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:29.239 DEBUG [main] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.buildExpressionFactory(ResourceBundleMessageInterpolator.java:175)] - Loaded expression factory via original TCCL
2024-05-11 13:22:29.244 DEBUG [main] [org.hibernate.validator.internal.engine.AbstractConfigurationImpl.messageInterpolator(AbstractConfigurationImpl.java:176)] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2024-05-11 13:22:29.245 DEBUG [main] [org.hibernate.validator.internal.engine.AbstractConfigurationImpl.constraintValidatorFactory(AbstractConfigurationImpl.java:208)] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2024-05-11 13:22:29.246 DEBUG [main] [org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:122)] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-05-11 13:22:29.247 DEBUG [main] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:54)] - Trying to load META-INF/validation.xml via user class loader
2024-05-11 13:22:29.247 DEBUG [main] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:61)] - Trying to load META-INF/validation.xml via TCCL
2024-05-11 13:22:29.248 DEBUG [main] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:67)] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-05-11 13:22:29.248 DEBUG [main] [org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:129)] - No META-INF/validation.xml found. Using annotation based configuration only.
2024-05-11 13:22:29.249 DEBUG [main] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:61)] - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-05-11 13:22:29.250 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.determinePropertyNodeNameProvider(ValidatorFactoryConfigurationHelper.java:355)] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2024-05-11 13:22:29.251 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:447)] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2024-05-11 13:22:29.251 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:448)] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2024-05-11 13:22:29.251 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:449)] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2024-05-11 13:22:29.252 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:450)] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2024-05-11 13:22:29.252 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:451)] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2024-05-11 13:22:29.252 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration'
2024-05-11 13:22:29.253 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'defaultPartHttpMessageReaderCustomizer'
2024-05-11 13:22:29.254 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.webflux.multipart-org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties'
2024-05-11 13:22:29.256 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'defaultPartHttpMessageReaderCustomizer' via factory method to bean named 'spring.webflux.multipart-org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties'
2024-05-11 13:22:29.256 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration'
2024-05-11 13:22:29.257 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-05-11 13:22:29.259 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.259 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-05-11 13:22:29.259 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webSessionIdResolver'
2024-05-11 13:22:29.261 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration'
2024-05-11 13:22:29.262 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.262 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'errorWebExceptionHandler'
2024-05-11 13:22:29.263 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'errorAttributes'
2024-05-11 13:22:29.266 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-05-11 13:22:29.269 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serverCodecConfigurer'
2024-05-11 13:22:29.270 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration'
2024-05-11 13:22:29.270 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration' via constructor to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-05-11 13:22:29.270 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-05-11 13:22:29.271 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.274 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig'
2024-05-11 13:22:29.275 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-05-11 13:22:29.276 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig' via constructor to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-05-11 13:22:29.276 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2459319c'
2024-05-11 13:22:29.381 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'errorWebExceptionHandler' via factory method to bean named 'errorAttributes'
2024-05-11 13:22:29.381 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'errorWebExceptionHandler' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-05-11 13:22:29.382 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'errorWebExceptionHandler' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:29.382 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'errorWebExceptionHandler' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:29.395 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration'
2024-05-11 13:22:29.396 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'zoneConfig'
2024-05-11 13:22:29.396 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'zoneConfig' via factory method to bean named 'environment'
2024-05-11 13:22:29.397 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerEagerContextInitializer'
2024-05-11 13:22:29.397 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties'
2024-05-11 13:22:29.399 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerEagerContextInitializer' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:29.399 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerEagerContextInitializer' via factory method to bean named 'spring.cloud.loadbalancer.eager-load-org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties'
2024-05-11 13:22:29.399 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerChildContextInitializer'
2024-05-11 13:22:29.399 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerChildContextInitializer' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:29.400 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerChildContextInitializer' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:29.400 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.gateway.config.GatewayReactiveLoadBalancerClientAutoConfiguration'
2024-05-11 13:22:29.400 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gatewayLoadBalancerClientFilter'
2024-05-11 13:22:29.401 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.gateway.loadbalancer-org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties'
2024-05-11 13:22:29.402 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gatewayLoadBalancerClientFilter' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:29.402 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gatewayLoadBalancerClientFilter' via factory method to bean named 'spring.cloud.gateway.loadbalancer-org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties'
2024-05-11 13:22:29.404 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerServiceInstanceCookieFilter'
2024-05-11 13:22:29.404 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerServiceInstanceCookieFilter' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:29.405 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration'
2024-05-11 13:22:29.405 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'compositeDiscoveryClient'
2024-05-11 13:22:29.406 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleDiscoveryClient'
2024-05-11 13:22:29.406 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration'
2024-05-11 13:22:29.409 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'inetUtils'
2024-05-11 13:22:29.409 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration'
2024-05-11 13:22:29.410 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'inetUtilsProperties'
2024-05-11 13:22:29.413 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'inetUtils' via factory method to bean named 'inetUtilsProperties'
2024-05-11 13:22:29.414 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleDiscoveryProperties'
2024-05-11 13:22:29.415 DEBUG [main] [org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115)] - Found key 'spring.application.name' in PropertySource 'environmentProperties' with value of type String
2024-05-11 13:22:29.520 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'simpleDiscoveryClient' via factory method to bean named 'simpleDiscoveryProperties'
2024-05-11 13:22:29.521 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'discoveryClient'
2024-05-11 13:22:29.521 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration'
2024-05-11 13:22:29.523 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaClientConfigBean'
2024-05-11 13:22:29.523 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration'
2024-05-11 13:22:29.524 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration' via constructor to bean named 'environment'
2024-05-11 13:22:29.525 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaClientConfigBean' via factory method to bean named 'environment'
2024-05-11 13:22:29.552 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClient'
2024-05-11 13:22:29.553 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClientConfigBean'
2024-05-11 13:22:29.553 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'simpleDiscoveryClient'
2024-05-11 13:22:29.553 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'discoveryClient'
2024-05-11 13:22:29.554 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration$ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration'
2024-05-11 13:22:29.554 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'discoveryClientRouteDefinitionLocator'
2024-05-11 13:22:29.555 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactiveCompositeDiscoveryClient'
2024-05-11 13:22:29.555 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration'
2024-05-11 13:22:29.556 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleReactiveDiscoveryClient'
2024-05-11 13:22:29.556 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration'
2024-05-11 13:22:29.557 DEBUG [main] [org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115)] - Found key 'spring.application.name' in PropertySource 'environmentProperties' with value of type String
2024-05-11 13:22:29.558 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleReactiveDiscoveryProperties'
2024-05-11 13:22:29.690 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'simpleReactiveDiscoveryClient' via factory method to bean named 'simpleReactiveDiscoveryProperties'
2024-05-11 13:22:29.691 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaReactiveDiscoveryClient'
2024-05-11 13:22:29.691 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClientConfiguration'
2024-05-11 13:22:29.693 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaReactiveDiscoveryClient' via factory method to bean named 'eurekaClient'
2024-05-11 13:22:29.693 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaReactiveDiscoveryClient' via factory method to bean named 'eurekaClientConfigBean'
2024-05-11 13:22:29.693 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactiveCompositeDiscoveryClient' via factory method to bean named 'simpleReactiveDiscoveryClient'
2024-05-11 13:22:29.693 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactiveCompositeDiscoveryClient' via factory method to bean named 'eurekaReactiveDiscoveryClient'
2024-05-11 13:22:29.695 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'discoveryLocatorProperties'
2024-05-11 13:22:29.695 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration'
2024-05-11 13:22:29.698 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'discoveryClientRouteDefinitionLocator' via factory method to bean named 'reactiveCompositeDiscoveryClient'
2024-05-11 13:22:29.699 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'discoveryClientRouteDefinitionLocator' via factory method to bean named 'discoveryLocatorProperties'
2024-05-11 13:22:29.789 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration'
2024-05-11 13:22:29.790 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'httpClientSslConfigurer'
2024-05-11 13:22:29.791 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'httpClientProperties'
2024-05-11 13:22:29.798 DEBUG [main] [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.buildExpressionFactory(ResourceBundleMessageInterpolator.java:175)] - Loaded expression factory via original TCCL
2024-05-11 13:22:29.799 DEBUG [main] [org.hibernate.validator.internal.engine.AbstractConfigurationImpl.messageInterpolator(AbstractConfigurationImpl.java:176)] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2024-05-11 13:22:29.799 DEBUG [main] [org.hibernate.validator.internal.engine.AbstractConfigurationImpl.constraintValidatorFactory(AbstractConfigurationImpl.java:208)] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2024-05-11 13:22:29.800 DEBUG [main] [org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:122)] - Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-05-11 13:22:29.800 DEBUG [main] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:54)] - Trying to load META-INF/validation.xml via user class loader
2024-05-11 13:22:29.801 DEBUG [main] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:61)] - Trying to load META-INF/validation.xml via TCCL
2024-05-11 13:22:29.802 DEBUG [main] [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper.getResettableInputStreamForPath(ResourceLoaderHelper.java:67)] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-05-11 13:22:29.803 DEBUG [main] [org.hibernate.validator.internal.xml.config.ValidationXmlParser.getValidationXmlInputStream(ValidationXmlParser.java:129)] - No META-INF/validation.xml found. Using annotation based configuration only.
2024-05-11 13:22:29.803 DEBUG [main] [org.hibernate.validator.internal.engine.resolver.TraversableResolvers.getDefault(TraversableResolvers.java:61)] - Cannot find jakarta.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-05-11 13:22:29.804 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.determinePropertyNodeNameProvider(ValidatorFactoryConfigurationHelper.java:355)] - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2024-05-11 13:22:29.806 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:447)] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2024-05-11 13:22:29.806 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:448)] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2024-05-11 13:22:29.806 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:449)] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2024-05-11 13:22:29.806 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:450)] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2024-05-11 13:22:29.806 DEBUG [main] [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper.logValidatorFactoryScopedConfiguration(ValidatorFactoryConfigurationHelper.java:451)] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2024-05-11 13:22:29.862 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'httpClientSslConfigurer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.862 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'httpClientSslConfigurer' via factory method to bean named 'httpClientProperties'
2024-05-11 13:22:29.869 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gatewayHttpClientFactory'
2024-05-11 13:22:29.872 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gatewayHttpClientFactory' via factory method to bean named 'httpClientProperties'
2024-05-11 13:22:29.872 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gatewayHttpClientFactory' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-05-11 13:22:29.872 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gatewayHttpClientFactory' via factory method to bean named 'httpClientSslConfigurer'
2024-05-11 13:22:29.923 DEBUG [main] [io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:100)] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-05-11 13:22:29.923 DEBUG [main] [io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:101)] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-05-11 13:22:29.950 DEBUG [main] [io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:129)] - -Dio.netty.leakDetection.level: simple
2024-05-11 13:22:29.951 DEBUG [main] [io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130)] - -Dio.netty.leakDetection.targetRecords: 4
2024-05-11 13:22:29.973 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routingFilter'
2024-05-11 13:22:29.975 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routingFilter' via factory method to bean named 'gatewayHttpClientFactory'
2024-05-11 13:22:29.975 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routingFilter' via factory method to bean named 'httpClientProperties'
2024-05-11 13:22:29.978 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'nettyWriteResponseFilter'
2024-05-11 13:22:29.979 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gatewayProperties'
2024-05-11 13:22:29.980 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.gateway.config.GatewayAutoConfiguration'
2024-05-11 13:22:30.076 DEBUG [main] [org.springframework.cloud.gateway.config.GatewayProperties.setRoutes(GatewayProperties.java:78)] - Routes supplied from Gateway Properties: [RouteDefinition{id='token', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/auth/**}}], filters=[], uri=lb://token, order=0, metadata={}}, RouteDefinition{id='user-management', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[FilterDefinition{name='UserManagementFilter', args={}}], uri=lb://user-management, order=0, metadata={}}, RouteDefinition{id='selling', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/selling/**, _genkey_1=/campaign/**, _genkey_2=/product-modify/**}}], filters=[FilterDefinition{name='SellingFilter', args={}}], uri=lb://selling, order=0, metadata={}}, RouteDefinition{id='report', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/sales/**}}], filters=[FilterDefinition{name='ReportFilter', args={}}], uri=lb://report, order=0, metadata={}}, RouteDefinition{id='product', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/product/**}}], filters=[], uri=lb://product, order=0, metadata={}}]
2024-05-11 13:22:30.081 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'nettyWriteResponseFilter' via factory method to bean named 'gatewayProperties'
2024-05-11 13:22:30.082 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactorNettyWebSocketClient'
2024-05-11 13:22:30.082 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactorNettyWebSocketClient' via factory method to bean named 'httpClientProperties'
2024-05-11 13:22:30.082 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactorNettyWebSocketClient' via factory method to bean named 'gatewayHttpClientFactory'
2024-05-11 13:22:30.086 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactorNettyRequestUpgradeStrategy'
2024-05-11 13:22:30.087 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactorNettyRequestUpgradeStrategy' via factory method to bean named 'httpClientProperties'
2024-05-11 13:22:30.090 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'stringToZonedDateTimeConverter'
2024-05-11 13:22:30.091 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'keyValueConverter'
2024-05-11 13:22:30.092 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routeLocatorBuilder'
2024-05-11 13:22:30.092 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeLocatorBuilder' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:30.093 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'propertiesRouteDefinitionLocator'
2024-05-11 13:22:30.093 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'propertiesRouteDefinitionLocator' via factory method to bean named 'gatewayProperties'
2024-05-11 13:22:30.093 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'inMemoryRouteDefinitionRepository'
2024-05-11 13:22:30.095 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routeDefinitionLocator'
2024-05-11 13:22:30.095 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionLocator' via factory method to bean named 'discoveryClientRouteDefinitionLocator'
2024-05-11 13:22:30.096 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionLocator' via factory method to bean named 'propertiesRouteDefinitionLocator'
2024-05-11 13:22:30.096 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionLocator' via factory method to bean named 'inMemoryRouteDefinitionRepository'
2024-05-11 13:22:30.135 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gatewayConfigurationService'
2024-05-11 13:22:30.136 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gatewayConfigurationService' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2459319c'
2024-05-11 13:22:30.138 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routeDefinitionRouteLocator'
2024-05-11 13:22:30.139 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'addRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.140 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'addRequestHeadersIfNotPresentGatewayFilterFactory'
2024-05-11 13:22:30.141 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'mapRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.142 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'addRequestParameterGatewayFilterFactory'
2024-05-11 13:22:30.143 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'addResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.144 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'modifyRequestBodyGatewayFilterFactory'
2024-05-11 13:22:30.144 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'modifyRequestBodyGatewayFilterFactory' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.148 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dedupeResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.150 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'modifyResponseBodyGatewayFilterFactory'
2024-05-11 13:22:30.151 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gzipMessageBodyResolver'
2024-05-11 13:22:30.152 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'modifyResponseBodyGatewayFilterFactory' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.152 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'modifyResponseBodyGatewayFilterFactory' via factory method to bean named 'gzipMessageBodyResolver'
2024-05-11 13:22:30.156 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'cacheRequestBodyGatewayFilterFactory'
2024-05-11 13:22:30.157 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'cacheRequestBodyGatewayFilterFactory' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.158 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'prefixPathGatewayFilterFactory'
2024-05-11 13:22:30.159 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'preserveHostHeaderGatewayFilterFactory'
2024-05-11 13:22:30.160 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'redirectToGatewayFilterFactory'
2024-05-11 13:22:30.161 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'removeJsonAttributesResponseBodyGatewayFilterFactory'
2024-05-11 13:22:30.161 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'removeJsonAttributesResponseBodyGatewayFilterFactory' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.161 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'removeJsonAttributesResponseBodyGatewayFilterFactory' via factory method to bean named 'gzipMessageBodyResolver'
2024-05-11 13:22:30.163 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'removeRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.165 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'removeRequestParameterGatewayFilterFactory'
2024-05-11 13:22:30.165 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'removeResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.165 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'rewritePathGatewayFilterFactory'
2024-05-11 13:22:30.166 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'retryGatewayFilterFactory'
2024-05-11 13:22:30.169 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'setPathGatewayFilterFactory'
2024-05-11 13:22:30.171 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'secureHeadersGatewayFilterFactory'
2024-05-11 13:22:30.172 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'secureHeadersProperties'
2024-05-11 13:22:30.174 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'secureHeadersGatewayFilterFactory' via factory method to bean named 'secureHeadersProperties'
2024-05-11 13:22:30.176 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'setRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.177 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'setRequestHostHeaderGatewayFilterFactory'
2024-05-11 13:22:30.178 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'setResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.179 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'rewriteResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.180 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'rewriteLocationResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.182 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'setStatusGatewayFilterFactory'
2024-05-11 13:22:30.184 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'saveSessionGatewayFilterFactory'
2024-05-11 13:22:30.184 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'stripPrefixGatewayFilterFactory'
2024-05-11 13:22:30.185 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'requestHeaderToRequestUriGatewayFilterFactory'
2024-05-11 13:22:30.186 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'requestSizeGatewayFilterFactory'
2024-05-11 13:22:30.187 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'requestHeaderSizeGatewayFilterFactory'
2024-05-11 13:22:30.189 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'rewriteRequestParameterGatewayFilterFactory'
2024-05-11 13:22:30.194 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'afterRoutePredicateFactory'
2024-05-11 13:22:30.198 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'beforeRoutePredicateFactory'
2024-05-11 13:22:30.199 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'betweenRoutePredicateFactory'
2024-05-11 13:22:30.201 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'cookieRoutePredicateFactory'
2024-05-11 13:22:30.202 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'headerRoutePredicateFactory'
2024-05-11 13:22:30.203 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'hostRoutePredicateFactory'
2024-05-11 13:22:30.204 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'methodRoutePredicateFactory'
2024-05-11 13:22:30.206 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'pathRoutePredicateFactory'
2024-05-11 13:22:30.208 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'queryRoutePredicateFactory'
2024-05-11 13:22:30.209 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'readBodyPredicateFactory'
2024-05-11 13:22:30.210 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'readBodyPredicateFactory' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.211 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'remoteAddrRoutePredicateFactory'
2024-05-11 13:22:30.212 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'xForwardedRemoteAddrRoutePredicateFactory'
2024-05-11 13:22:30.213 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'weightCalculatorWebFilter'
2024-05-11 13:22:30.214 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'weightCalculatorWebFilter' via factory method to bean named 'gatewayConfigurationService'
2024-05-11 13:22:30.217 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'weightRoutePredicateFactory'
2024-05-11 13:22:30.218 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'cloudFoundryRouteServiceRoutePredicateFactory'
2024-05-11 13:22:30.219 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'gatewayProperties'
2024-05-11 13:22:30.219 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'reportFilter'
2024-05-11 13:22:30.219 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'sellingFilter'
2024-05-11 13:22:30.219 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'userManagementFilter'
2024-05-11 13:22:30.219 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'addRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.219 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'addRequestHeadersIfNotPresentGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'mapRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'addRequestParameterGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'addResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'modifyRequestBodyGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'dedupeResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'modifyResponseBodyGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'cacheRequestBodyGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'prefixPathGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'preserveHostHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'redirectToGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'removeJsonAttributesResponseBodyGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'removeRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'removeRequestParameterGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'removeResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'rewritePathGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'retryGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'setPathGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'secureHeadersGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'setRequestHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'setRequestHostHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'setResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'rewriteResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'rewriteLocationResponseHeaderGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'setStatusGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'saveSessionGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'stripPrefixGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'requestHeaderToRequestUriGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'requestSizeGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'requestHeaderSizeGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'rewriteRequestParameterGatewayFilterFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'afterRoutePredicateFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'beforeRoutePredicateFactory'
2024-05-11 13:22:30.220 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'betweenRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'cookieRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'headerRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'hostRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'methodRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'pathRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'queryRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'readBodyPredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'remoteAddrRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'xForwardedRemoteAddrRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'weightRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'cloudFoundryRouteServiceRoutePredicateFactory'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'routeDefinitionLocator'
2024-05-11 13:22:30.221 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeDefinitionRouteLocator' via factory method to bean named 'gatewayConfigurationService'
2024-05-11 13:22:30.222 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-11 13:22:30.223 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-11 13:22:30.223 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'cachedCompositeRouteLocator'
2024-05-11 13:22:30.224 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'cachedCompositeRouteLocator' via factory method to bean named 'routeDefinitionRouteLocator'
2024-05-11 13:22:30.228 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routeRefreshListener'
2024-05-11 13:22:30.228 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routeRefreshListener' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:30.229 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'filteringWebHandler'
2024-05-11 13:22:30.229 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'adaptCachedBodyGlobalFilter'
2024-05-11 13:22:30.230 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'removeCachedBodyFilter'
2024-05-11 13:22:30.230 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routeToRequestUrlFilter'
2024-05-11 13:22:30.231 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'forwardRoutingFilter'
2024-05-11 13:22:30.231 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'forwardPathFilter'
2024-05-11 13:22:30.231 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'websocketRoutingFilter'
2024-05-11 13:22:30.232 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webSocketService'
2024-05-11 13:22:30.232 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'webSocketService' via factory method to bean named 'reactorNettyRequestUpgradeStrategy'
2024-05-11 13:22:30.235 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'websocketRoutingFilter' via factory method to bean named 'reactorNettyWebSocketClient'
2024-05-11 13:22:30.236 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'websocketRoutingFilter' via factory method to bean named 'webSocketService'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'gatewayLoadBalancerClientFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'loadBalancerServiceInstanceCookieFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'routingFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'nettyWriteResponseFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'adaptCachedBodyGlobalFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'removeCachedBodyFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'routeToRequestUrlFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'forwardRoutingFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'forwardPathFilter'
2024-05-11 13:22:30.237 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'filteringWebHandler' via factory method to bean named 'websocketRoutingFilter'
2024-05-11 13:22:30.240 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'globalCorsProperties'
2024-05-11 13:22:30.241 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'corsGatewayFilterApplicationListener'
2024-05-11 13:22:30.242 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routePredicateHandlerMapping'
2024-05-11 13:22:30.242 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routePredicateHandlerMapping' via factory method to bean named 'filteringWebHandler'
2024-05-11 13:22:30.243 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routePredicateHandlerMapping' via factory method to bean named 'cachedCompositeRouteLocator'
2024-05-11 13:22:30.243 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routePredicateHandlerMapping' via factory method to bean named 'globalCorsProperties'
2024-05-11 13:22:30.243 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routePredicateHandlerMapping' via factory method to bean named 'environment'
2024-05-11 13:22:30.246 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'corsGatewayFilterApplicationListener' via factory method to bean named 'globalCorsProperties'
2024-05-11 13:22:30.246 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'corsGatewayFilterApplicationListener' via factory method to bean named 'routePredicateHandlerMapping'
2024-05-11 13:22:30.246 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'corsGatewayFilterApplicationListener' via factory method to bean named 'cachedCompositeRouteLocator'
2024-05-11 13:22:30.247 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'forwardedHeadersFilter'
2024-05-11 13:22:30.248 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'removeHopByHopHeadersFilter'
2024-05-11 13:22:30.257 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'xForwardedHeadersFilter'
2024-05-11 13:22:30.260 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gRPCRequestHeadersFilter'
2024-05-11 13:22:30.261 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gRPCResponseHeadersFilter'
2024-05-11 13:22:30.262 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'transferEncodingNormalizationHeadersFilter'
2024-05-11 13:22:30.262 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'configurableHintsRegistrationProcessor'
2024-05-11 13:22:30.267 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webFluxConversionService'
2024-05-11 13:22:30.270 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webFluxValidator'
2024-05-11 13:22:30.273 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'localeContextResolver'
2024-05-11 13:22:30.275 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webSessionManager'
2024-05-11 13:22:30.286 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webHandler'
2024-05-11 13:22:30.288 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-05-11 13:22:30.289 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webFluxContentTypeResolver'
2024-05-11 13:22:30.291 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'webFluxContentTypeResolver'
2024-05-11 13:22:30.311 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'routerFunctionMapping'
2024-05-11 13:22:30.312 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.313 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-05-11 13:22:30.314 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'resourceUrlProvider'
2024-05-11 13:22:30.317 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'resourceUrlProvider'
2024-05-11 13:22:30.330 DEBUG [main] [org.springframework.web.reactive.handler.SimpleUrlHandlerMapping.logMappings(SimpleUrlHandlerMapping.java:167)] - 'resourceHandlerMapping' {/webjars/**=ResourceWebHandler [classpath [META-INF/resources/webjars/]], /**=ResourceWebHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/]]}
2024-05-11 13:22:30.330 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'welcomePageRouterFunctionMapping'
2024-05-11 13:22:30.330 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration'
2024-05-11 13:22:30.331 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'welcomePageRouterFunctionMapping' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:30.331 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'welcomePageRouterFunctionMapping' via factory method to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-05-11 13:22:30.331 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'welcomePageRouterFunctionMapping' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-05-11 13:22:30.334 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-05-11 13:22:30.334 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webFluxAdapterRegistry'
2024-05-11 13:22:30.342 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'webFluxAdapterRegistry'
2024-05-11 13:22:30.342 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.342 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'webFluxConversionService'
2024-05-11 13:22:30.342 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'webFluxValidator'
2024-05-11 13:22:30.345 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-05-11 13:22:30.345 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
2024-05-11 13:22:30.346 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-05-11 13:22:30.346 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration'
2024-05-11 13:22:30.347 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-05-11 13:22:30.348 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-05-11 13:22:30.350 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-05-11 13:22:30.350 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
2024-05-11 13:22:30.350 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
2024-05-11 13:22:30.350 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-05-11 13:22:30.357 DEBUG [main] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:252)] - Initializing ExecutorService 'applicationTaskExecutor'
2024-05-11 13:22:30.392 DEBUG [main] [org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver.initControllerAdviceCaches(ControllerMethodResolver.java:271)] - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2024-05-11 13:22:30.392 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-05-11 13:22:30.393 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleHandlerAdapter'
2024-05-11 13:22:30.394 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webFluxWebSocketHandlerAdapter'
2024-05-11 13:22:30.397 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'responseEntityResultHandler'
2024-05-11 13:22:30.398 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'responseEntityResultHandler' via factory method to bean named 'webFluxAdapterRegistry'
2024-05-11 13:22:30.398 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'responseEntityResultHandler' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.398 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'responseEntityResultHandler' via factory method to bean named 'webFluxContentTypeResolver'
2024-05-11 13:22:30.399 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'responseBodyResultHandler'
2024-05-11 13:22:30.399 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'responseBodyResultHandler' via factory method to bean named 'webFluxAdapterRegistry'
2024-05-11 13:22:30.399 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'responseBodyResultHandler' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.399 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'responseBodyResultHandler' via factory method to bean named 'webFluxContentTypeResolver'
2024-05-11 13:22:30.400 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'viewResolutionResultHandler'
2024-05-11 13:22:30.400 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'viewResolutionResultHandler' via factory method to bean named 'webFluxAdapterRegistry'
2024-05-11 13:22:30.400 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'viewResolutionResultHandler' via factory method to bean named 'webFluxContentTypeResolver'
2024-05-11 13:22:30.404 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serverResponseResultHandler'
2024-05-11 13:22:30.404 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'serverResponseResultHandler' via factory method to bean named 'serverCodecConfigurer'
2024-05-11 13:22:30.405 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'responseStatusExceptionHandler'
2024-05-11 13:22:30.406 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration'
2024-05-11 13:22:30.408 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig'
2024-05-11 13:22:30.408 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig' via constructor to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:30.408 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'httpHandler'
2024-05-11 13:22:30.423 DEBUG [main] [org.springframework.web.server.adapter.HttpWebHandlerAdapter.afterPropertiesSet(HttpWebHandlerAdapter.java:266)] - enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-05-11 13:22:30.425 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration'
2024-05-11 13:22:30.425 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
2024-05-11 13:22:30.425 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-05-11 13:22:30.426 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-05-11 13:22:30.426 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'applicationAvailability'
2024-05-11 13:22:30.428 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration'
2024-05-11 13:22:30.429 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loggingRebinder'
2024-05-11 13:22:30.430 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'configDataContextRefresher'
2024-05-11 13:22:30.431 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties'
2024-05-11 13:22:30.431 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:30.432 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'refreshScope'
2024-05-11 13:22:30.432 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties'
2024-05-11 13:22:30.433 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'refreshScopeLifecycle'
2024-05-11 13:22:30.433 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'refreshScopeLifecycle' via factory method to bean named 'configDataContextRefresher'
2024-05-11 13:22:30.433 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'refreshEventListener'
2024-05-11 13:22:30.433 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'refreshEventListener' via factory method to bean named 'configDataContextRefresher'
2024-05-11 13:22:30.435 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-05-11 13:22:30.435 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-05-11 13:22:30.436 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'lifecycleProcessor'
2024-05-11 13:22:30.436 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-05-11 13:22:30.437 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-05-11 13:22:30.438 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
2024-05-11 13:22:30.439 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gsonBuilder'
2024-05-11 13:22:30.439 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
2024-05-11 13:22:30.440 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2024-05-11 13:22:30.441 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2024-05-11 13:22:30.442 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
2024-05-11 13:22:30.451 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'gson'
2024-05-11 13:22:30.452 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
2024-05-11 13:22:30.466 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-05-11 13:22:30.468 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-05-11 13:22:30.469 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-05-11 13:22:30.469 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-05-11 13:22:30.470 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-05-11 13:22:30.470 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-05-11 13:22:30.470 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration'
2024-05-11 13:22:30.471 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties'
2024-05-11 13:22:30.471 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration' via constructor to bean named 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties'
2024-05-11 13:22:30.472 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-05-11 13:22:30.472 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-05-11 13:22:30.473 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
2024-05-11 13:22:30.473 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-05-11 13:22:30.473 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
2024-05-11 13:22:30.475 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-05-11 13:22:30.475 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
2024-05-11 13:22:30.475 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
2024-05-11 13:22:30.475 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-05-11 13:22:30.476 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-05-11 13:22:30.478 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration'
2024-05-11 13:22:30.479 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-05-11 13:22:30.479 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-05-11 13:22:30.480 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
2024-05-11 13:22:30.481 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-05-11 13:22:30.481 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
2024-05-11 13:22:30.487 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-05-11 13:22:30.487 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-05-11 13:22:30.488 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty'
2024-05-11 13:22:30.488 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'reactorClientHttpConnectorFactory'
2024-05-11 13:22:30.489 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'reactorClientHttpConnectorFactory' via factory method to bean named 'reactorResourceFactory'
2024-05-11 13:22:30.491 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration'
2024-05-11 13:22:30.491 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration'
2024-05-11 13:22:30.492 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'exchangeStrategiesCustomizer'
2024-05-11 13:22:30.492 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration'
2024-05-11 13:22:30.492 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'webClientSsl'
2024-05-11 13:22:30.494 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'webClientSsl' via factory method to bean named 'reactorClientHttpConnectorFactory'
2024-05-11 13:22:30.494 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'webClientSsl' via factory method to bean named 'sslBundleRegistry'
2024-05-11 13:22:30.494 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration'
2024-05-11 13:22:30.495 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'configurationPropertiesRebinder'
2024-05-11 13:22:30.495 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'configurationPropertiesRebinder' via factory method to bean named 'configurationPropertiesBeans'
2024-05-11 13:22:30.497 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration'
2024-05-11 13:22:30.497 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'environmentManager'
2024-05-11 13:22:30.497 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'environmentManager' via factory method to bean named 'environment'
2024-05-11 13:22:30.498 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration'
2024-05-11 13:22:30.499 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaAutoServiceRegistration'
2024-05-11 13:22:30.499 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaServiceRegistry'
2024-05-11 13:22:30.502 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285'
2024-05-11 13:22:30.502 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaServiceRegistry'
2024-05-11 13:22:30.502 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaRegistration'
2024-05-11 13:22:30.502 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher'
2024-05-11 13:22:30.504 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration'
2024-05-11 13:22:30.504 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'tlsProperties'
2024-05-11 13:22:30.506 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'restTemplateDiscoveryClientOptionalArgs'
2024-05-11 13:22:30.507 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'defaultEurekaClientHttpRequestFactorySupplier'
2024-05-11 13:22:30.507 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties'
2024-05-11 13:22:30.508 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'defaultEurekaClientHttpRequestFactorySupplier' via factory method to bean named 'eureka.client.rest-template-timeout-org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties'
2024-05-11 13:22:30.513 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'restTemplateDiscoveryClientOptionalArgs' via factory method to bean named 'tlsProperties'
2024-05-11 13:22:30.513 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'restTemplateDiscoveryClientOptionalArgs' via factory method to bean named 'defaultEurekaClientHttpRequestFactorySupplier'
2024-05-11 13:22:30.513 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-11 13:22:30.515 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'restTemplateTransportClientFactories'
2024-05-11 13:22:30.517 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'restTemplateTransportClientFactories' via factory method to bean named 'restTemplateDiscoveryClientOptionalArgs'
2024-05-11 13:22:30.518 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration'
2024-05-11 13:22:30.520 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaFeature'
2024-05-11 13:22:30.521 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serviceManagementMetadataProvider'
2024-05-11 13:22:30.522 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaInstanceConfigBean'
2024-05-11 13:22:30.523 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'inetUtils'
2024-05-11 13:22:30.523 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'serviceManagementMetadataProvider'
2024-05-11 13:22:30.645 DEBUG [main] [org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getHealthCheckUrl(DefaultManagementMetadataProvider.java:71)] - Constructed eureka meta-data healthcheckUrl: http://DESKTOP-1U3DIDU.local:8088/actuator/health
2024-05-11 13:22:30.645 DEBUG [main] [org.springframework.cloud.netflix.eureka.metadata.DefaultManagementMetadataProvider.getStatusPageUrl(DefaultManagementMetadataProvider.java:80)] - Constructed eureka meta-data statusPageUrl: http://DESKTOP-1U3DIDU.local:8088/actuator/info
2024-05-11 13:22:30.655 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration'
2024-05-11 13:22:30.656 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties'
2024-05-11 13:22:30.657 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration'
2024-05-11 13:22:30.658 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'restTemplateCustomizer'
2024-05-11 13:22:30.658 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'restTemplateCustomizer' via factory method to bean named 'loadBalancerInterceptor'
2024-05-11 13:22:30.659 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancedRestTemplateInitializerDeprecated'
2024-05-11 13:22:30.659 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration'
2024-05-11 13:22:30.660 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'loadBalancerExchangeFilterFunction'
2024-05-11 13:22:30.660 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'loadBalancerExchangeFilterFunction' via factory method to bean named 'loadBalancerClientFactory'
2024-05-11 13:22:30.662 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration'
2024-05-11 13:22:30.663 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration'
2024-05-11 13:22:30.663 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'compositeCompatibilityVerifier'
2024-05-11 13:22:30.663 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'springBootVersionVerifier'
2024-05-11 13:22:30.663 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties'
2024-05-11 13:22:30.664 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'springBootVersionVerifier' via factory method to bean named 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties'
2024-05-11 13:22:30.666 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'sleuthPresentVerifier'
2024-05-11 13:22:30.667 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'springBootVersionVerifier'
2024-05-11 13:22:30.667 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'sleuthPresentVerifier'
2024-05-11 13:22:30.667 DEBUG [main] [org.springframework.cloud.configuration.SpringBootVersionVerifier.bootVersionFromManifest(SpringBootVersionVerifier.java:61)] - Version found in Boot manifest [3.2.2]
2024-05-11 13:22:30.668 DEBUG [main] [org.springframework.cloud.configuration.CompositeCompatibilityVerifier.verifyDependencies(CompositeCompatibilityVerifier.java:43)] - All conditions are passing
2024-05-11 13:22:30.668 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration'
2024-05-11 13:22:30.668 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'defaultLoadBalancerCacheManager'
2024-05-11 13:22:30.668 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties'
2024-05-11 13:22:30.669 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'defaultLoadBalancerCacheManager' via factory method to bean named 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties'
2024-05-11 13:22:30.676 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration'
2024-05-11 13:22:30.677 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'caffeineWarnLogger'
2024-05-11 13:22:30.677 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-11 13:22:30.677 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration'
2024-05-11 13:22:30.677 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration'
2024-05-11 13:22:30.677 DEBUG [main] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'eurekaLoadBalancerProperties'
2024-05-11 13:22:30.694 DEBUG [main] [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:464)] - Starting beans in phase -2147483647
2024-05-11 13:22:30.694 DEBUG [main] [org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:290)] - Successfully started bean 'springBootLoggingLifecycle'
2024-05-11 13:22:30.694 DEBUG [main] [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:464)] - Starting beans in phase 0
2024-05-11 13:22:30.697 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaClient'
2024-05-11 13:22:30.697 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaInstanceConfigBean'
2024-05-11 13:22:30.697 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaApplicationInfoManager'
2024-05-11 13:22:30.700 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaApplicationInfoManager' via factory method to bean named 'eurekaInstanceConfigBean'
2024-05-11 13:22:30.704 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-11 13:22:30.707 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaApplicationInfoManager'
2024-05-11 13:22:30.707 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaClientConfigBean'
2024-05-11 13:22:30.707 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaInstanceConfigBean'
2024-05-11 13:22:30.707 DEBUG [main] [org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:948)] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'restTemplateTransportClientFactories'
2024-05-11 13:22:30.743 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-11 13:22:30.748 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-11 13:22:30.749 DEBUG [main] [com.netflix.discovery.endpoint.EndpointUtils.getServiceUrlsMapFromConfig(EndpointUtils.java:240)] - The availability zone for the given region us-east-1 are [defaultZone]
2024-05-11 13:22:30.750 DEBUG [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpointsFromConfig(ConfigClusterResolver.java:89)] - Config resolved to [AwsEndpoint{ serviceUrl='http://eureka-server:8761/eureka/', region='us-east-1', zone='defaultZone'}]
2024-05-11 13:22:30.751 DEBUG [main] [com.netflix.discovery.shared.resolver.aws.ZoneAffinityClusterResolver.getClusterEndpoints(ZoneAffinityClusterResolver.java:74)] - Local zone=defaultZone; resolved to: [AwsEndpoint{ serviceUrl='http://eureka-server:8761/eureka/', region='us-east-1', zone='defaultZone'}]
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-11 13:22:30.779 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-11 13:22:30.780 DEBUG [main] [com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:67)] - Ending a session and starting anew
2024-05-11 13:22:31.015 DEBUG [main] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - HTTP GET http://eureka-server:8761/eureka/apps/
2024-05-11 13:22:31.129 DEBUG [main] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - Accept=[application/json, application/*+json]
2024-05-11 13:22:31.139 DEBUG [main] [org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:164)] - ex-0000000001 preparing request execution
2024-05-11 13:22:31.148 DEBUG [main] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:181)] - ex-0000000001 target auth state: UNCHALLENGED
2024-05-11 13:22:31.148 DEBUG [main] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:187)] - ex-0000000001 proxy auth state: UNCHALLENGED
2024-05-11 13:22:31.149 DEBUG [main] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:123)] - ex-0000000001 acquiring connection with route {}->http://eureka-server:8761
2024-05-11 13:22:31.149 DEBUG [main] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:101)] - ex-0000000001 acquiring endpoint (180000 MILLISECONDS)
2024-05-11 13:22:31.150 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:296)] - ex-0000000001 endpoint lease request (180000 MILLISECONDS) [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:31.153 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:318)] - ex-0000000001 endpoint leased [route: {}->http://eureka-server:8761][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2024-05-11 13:22:31.165 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:360)] - ex-0000000001 acquired ep-0000000001
2024-05-11 13:22:31.165 DEBUG [main] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:116)] - ex-0000000001 acquired endpoint ep-0000000001
2024-05-11 13:22:31.165 DEBUG [main] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:130)] - ex-0000000001 opening connection {}->http://eureka-server:8761
2024-05-11 13:22:31.166 DEBUG [main] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:160)] - ep-0000000001 connecting endpoint (180000 MILLISECONDS)
2024-05-11 13:22:31.167 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:444)] - ep-0000000001 connecting endpoint to http://eureka-server:8761 (180000 MILLISECONDS)
2024-05-11 13:22:31.167 DEBUG [main] [org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:140)] - eureka-server resolving remote address
2024-05-11 13:22:40.902 DEBUG [main] [org.apache.hc.client5.http.impl.io.DefaultManagedHttpClientConnection.close(DefaultManagedHttpClientConnection.java:175)] - http-outgoing-0 close connection IMMEDIATE
2024-05-11 13:22:40.902 DEBUG [main] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:240)] - ep-0000000001 endpoint closed
2024-05-11 13:22:40.902 DEBUG [main] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:244)] - ep-0000000001 discarding endpoint
2024-05-11 13:22:40.902 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:389)] - ep-0000000001 releasing endpoint
2024-05-11 13:22:40.902 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:412)] - ep-0000000001 connection is not kept alive
2024-05-11 13:22:40.902 DEBUG [main] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:421)] - ep-0000000001 connection released [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:40.906 INFO [main] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:84)] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka-server:8761/eureka/}, exception=I/O error on GET request for "http://eureka-server:8761/eureka/apps/": No such host is known (eureka-server) stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://eureka-server:8761/eureka/apps/": No such host is known (eureka-server)
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:364)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:284)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:467)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:256)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:201)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:978)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.net.UnknownHostException: No such host is known (eureka-server)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:933)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1532)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1384)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1305)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:43)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:143)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)
	... 145 more

2024-05-11 13:22:40.906 WARN [main] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] - Request execution failed with message: I/O error on GET request for "http://eureka-server:8761/eureka/apps/": No such host is known (eureka-server)
2024-05-11 13:22:40.907 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)] - DiscoveryClient_GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:364)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:284)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:467)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:256)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:201)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:978)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)

2024-05-11 13:22:40.907 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:398)] - Initial registry fetch from primary servers failed
2024-05-11 13:22:40.907 WARN [main] [com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:268)] - Using default backup registry implementation which does not do anything.
2024-05-11 13:22:40.908 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:403)] - Initial registry fetch from backup servers failed
2024-05-11 13:22:40.909 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-11 13:22:40.912 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-11 13:22:40.919 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1715422960917 with initial instances count: 0
2024-05-11 13:22:40.921 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-11 13:22:40.922 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1715422960922, current=UP, previous=STARTING]
2024-05-11 13:22:40.923 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:93)] - Executing on-demand update of local InstanceInfo
2024-05-11 13:22:40.923 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:97)] - Canceling the latest scheduled update, it will be rescheduled at the end of on demand update
2024-05-11 13:22:40.925 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088: registering service...
2024-05-11 13:22:40.925 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:67)] - Ending a session and starting anew
2024-05-11 13:22:40.929 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - HTTP POST http://eureka-server:8761/eureka/apps/GATEWAY
2024-05-11 13:22:40.931 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - Accept=[application/json, application/*+json]
2024-05-11 13:22:40.948 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - Writing [InstanceInfo [instanceId = DESKTOP-1U3DIDU.local:gateway:8088, appName = GATEWAY, hostName = DESKTOP-1U3DIDU.local, status = UP, ipAddr = 192.168.1.108, port = 8088, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2dc5d1c8] as "application/json"
2024-05-11 13:22:40.966 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:164)] - ex-0000000002 preparing request execution
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:181)] - ex-0000000002 target auth state: UNCHALLENGED
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:187)] - ex-0000000002 proxy auth state: UNCHALLENGED
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:123)] - ex-0000000002 acquiring connection with route {}->http://eureka-server:8761
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:101)] - ex-0000000002 acquiring endpoint (180000 MILLISECONDS)
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:296)] - ex-0000000002 endpoint lease request (180000 MILLISECONDS) [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:318)] - ex-0000000002 endpoint leased [route: {}->http://eureka-server:8761][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:360)] - ex-0000000002 acquired ep-0000000002
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:116)] - ex-0000000002 acquired endpoint ep-0000000002
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:130)] - ex-0000000002 opening connection {}->http://eureka-server:8761
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:160)] - ep-0000000002 connecting endpoint (180000 MILLISECONDS)
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:444)] - ep-0000000002 connecting endpoint to http://eureka-server:8761 (180000 MILLISECONDS)
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:140)] - eureka-server resolving remote address
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.DefaultManagedHttpClientConnection.close(DefaultManagedHttpClientConnection.java:175)] - http-outgoing-1 close connection IMMEDIATE
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:240)] - ep-0000000002 endpoint closed
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:244)] - ep-0000000002 discarding endpoint
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:389)] - ep-0000000002 releasing endpoint
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:412)] - ep-0000000002 connection is not kept alive
2024-05-11 13:22:40.967 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:421)] - ep-0000000002 connection released [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:40.968 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:84)] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka-server:8761/eureka/}, exception=I/O error on POST request for "http://eureka-server:8761/eureka/apps/GATEWAY": eureka-server stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://eureka-server:8761/eureka/apps/GATEWAY": eureka-server
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.UnknownHostException: eureka-server
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1532)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1384)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1305)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:43)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:143)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)
	... 22 more

2024-05-11 13:22:40.968 WARN [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] - Request execution failed with message: I/O error on POST request for "http://eureka-server:8761/eureka/apps/GATEWAY": eureka-server
2024-05-11 13:22:40.968 WARN [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:822)] - DiscoveryClient_GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) [eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-2.0.1.jar:2.0.1]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:833) [?:?]
2024-05-11 13:22:40.973 WARN [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-2.0.1.jar:2.0.1]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:833) [?:?]
2024-05-11 13:22:40.985 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition token applying {_genkey_0=/auth/**} to Path
2024-05-11 13:22:41.002 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: token
2024-05-11 13:22:41.002 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition user-management applying {_genkey_0=/users/**} to Path
2024-05-11 13:22:41.004 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:148)] - RouteDefinition user-management applying filter {} to UserManagementFilter
2024-05-11 13:22:41.006 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: user-management
2024-05-11 13:22:41.006 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition selling applying {_genkey_0=/selling/**, _genkey_1=/campaign/**, _genkey_2=/product-modify/**} to Path
2024-05-11 13:22:41.007 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:148)] - RouteDefinition selling applying filter {} to SellingFilter
2024-05-11 13:22:41.009 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: selling
2024-05-11 13:22:41.009 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition report applying {_genkey_0=/sales/**} to Path
2024-05-11 13:22:41.010 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:148)] - RouteDefinition report applying filter {} to ReportFilter
2024-05-11 13:22:41.011 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: report
2024-05-11 13:22:41.011 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition product applying {_genkey_0=/product/**} to Path
2024-05-11 13:22:41.011 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: product
2024-05-11 13:22:41.017 DEBUG [main] [org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:290)] - Successfully started bean 'eurekaAutoServiceRegistration'
2024-05-11 13:22:41.017 DEBUG [main] [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:464)] - Starting beans in phase 2147483647
2024-05-11 13:22:41.030 DEBUG [main] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logReport(ConditionEvaluationReportLogger.java:72)] - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AutoServiceRegistrationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   AutoServiceRegistrationConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   BlockingLoadBalancerClientAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (OnPropertyCondition)
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on BlockingRestClassesPresentCondition.RestClientPresent @ConditionalOnClass found required class 'org.springframework.web.client.RestClient'; NestedCondition on BlockingRestClassesPresentCondition.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (BlockingRestClassesPresentCondition)

   BlockingLoadBalancerClientAutoConfiguration#blockingLoadBalancerClient matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration#loadBalancerServiceInstanceCookieTransformer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BlockingLoadBalancerClientAutoConfiguration#xForwarderHeadersTransformer matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ClientHttpConnectorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration#webClientHttpConnector matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ClientHttpConnectorAutoConfiguration#webClientHttpConnectorCustomizer matched:
      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'webClientHttpConnector' (OnBeanCondition)

   ClientHttpConnectorFactoryConfiguration.ReactorNetty matched:
      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CodecsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration.JacksonCodecConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   CompatibilityVerifierAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   DiscoveryClientOptionalArgsConfiguration#defaultEurekaClientHttpRequestFactorySupplier matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateDiscoveryClientOptionalArgs matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'; @ConditionalOnMissingClass did not find unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.webclient.enabled=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: current) did not find any beans (OnBeanCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateTransportClientFactories matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'; @ConditionalOnMissingClass did not find unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.webclient.enabled=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: com.netflix.discovery.shared.transport.jersey.TransportClientFactories; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   ErrorWebFluxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)

   ErrorWebFluxAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorWebFluxAutoConfiguration#errorWebExceptionHandler matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)

   EurekaClientAutoConfiguration#eurekaAutoServiceRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaClientConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClientConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaInstanceConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.EurekaInstanceConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#serviceManagementMetadataProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.refresh.enable=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaApplicationInfoManager matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.ApplicationInfoManager; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaClient matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration#discoveryClient matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaDiscoveryClientConfiguration.EurekaClientConfigurationRefresher matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent' (OnClassCondition)

   EurekaReactiveDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required classes 'com.netflix.discovery.EurekaClientConfig', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   EurekaReactiveDiscoveryClientConfiguration#eurekaReactiveDiscoveryClient matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.gateway.enabled) matched (OnPropertyCondition)

   GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#afterRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#beforeRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#betweenRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#cachedCompositeRouteLocator matched:
      - @ConditionalOnMissingBean (names: cachedCompositeRouteLocator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#cookieRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#corsGatewayFilterApplicationListener matched:
      - @ConditionalOnProperty (spring.cloud.gateway.globalcors.enabled) matched (OnPropertyCondition)

   GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#filteringWebHandler matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.gateway.handler.FilteringWebHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration#forwardPathFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#forwardRoutingFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#forwardedHeadersFilter matched:
      - @ConditionalOnProperty (spring.cloud.gateway.forwarded.enabled) matched (OnPropertyCondition)

   GatewayAutoConfiguration#gRPCRequestHeadersFilter matched:
      - @ConditionalOnProperty (server.http2.enabled) matched (OnPropertyCondition)

   GatewayAutoConfiguration#gRPCResponseHeadersFilter matched:
      - @ConditionalOnProperty (server.http2.enabled) matched (OnPropertyCondition)

   GatewayAutoConfiguration#headerRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#hostRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#inMemoryRouteDefinitionRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.gateway.route.RouteDefinitionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#methodRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#pathRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#propertiesRouteDefinitionLocator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.gateway.config.PropertiesRouteDefinitionLocator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration#queryRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#readBodyPredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#redirectToGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#removeCachedBodyFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#retryGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#routePredicateHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration#routeRefreshListener matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.client.discovery.event.HeartbeatMonitor' (OnClassCondition)

   GatewayAutoConfiguration#routeToRequestUrlFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#setPathGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#setStatusGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched:
      - matched (OnEnabledFilter)

   GatewayAutoConfiguration#webSocketService matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#websocketRoutingFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration#weightCalculatorWebFilter matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#weightRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration#xForwardedHeadersFilter matched:
      - @ConditionalOnProperty (spring.cloud.gateway.x-forwarded.enabled) matched (OnPropertyCondition)

   GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched:
      - matched (OnEnabledPredicate)

   GatewayAutoConfiguration.NettyConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   GatewayAutoConfiguration.NettyConfiguration#gatewayHttpClientFactory matched:
      - @ConditionalOnMissingBean (types: reactor.netty.http.client.HttpClient,org.springframework.cloud.gateway.config.HttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration.NettyConfiguration#nettyWriteResponseFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration.NettyConfiguration#reactorNettyRequestUpgradeStrategy matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration.NettyConfiguration#reactorNettyWebSocketClient matched:
      - matched (OnEnabledGlobalFilter)

   GatewayAutoConfiguration.NettyConfiguration#routingFilter matched:
      - matched (OnEnabledGlobalFilter)

   GatewayClassPathWarningAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.gateway.enabled) matched (OnPropertyCondition)

   GatewayDiscoveryClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.gateway.enabled) matched (OnPropertyCondition)

   GatewayDiscoveryClientAutoConfiguration.ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   GatewayDiscoveryClientAutoConfiguration.ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration#discoveryClientRouteDefinitionLocator matched:
      - @ConditionalOnProperty (spring.cloud.gateway.discovery.locator.enabled) matched (OnPropertyCondition)

   GatewayReactiveLoadBalancerClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer', 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration', 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   GatewayReactiveLoadBalancerClientAutoConfiguration#gatewayLoadBalancerClientFilter matched:
      - @ConditionalOnBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found bean 'loadBalancerClientFactory'; @ConditionalOnMissingBean (types: org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - matched (OnEnabledGlobalFilter)

   GatewayReactiveLoadBalancerClientAutoConfiguration#loadBalancerServiceInstanceCookieFilter matched:
      - @ConditionalOnBean (types: org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter,org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) found beans 'loadBalancerClientFactory', 'gatewayLoadBalancerClientFilter'; @ConditionalOnMissingBean (types: org.springframework.cloud.gateway.filter.LoadBalancerServiceInstanceCookieFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - matched (OnEnabledGlobalFilter)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpHandlerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.http.server.reactive.HttpHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleMvcEndpointAutoConfiguration#environmentManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration matched:
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on BlockingRestClassesPresentCondition.RestClientPresent @ConditionalOnClass found required class 'org.springframework.web.client.RestClient'; NestedCondition on BlockingRestClassesPresentCondition.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (BlockingRestClassesPresentCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'blockingLoadBalancerClient' (OnBeanCondition)

   org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (OnPropertyCondition)

   LoadBalancerAutoConfiguration#loadBalancerClientFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration#loadBalancerRequestFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration#zoneConfig matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition.RetryDisabled @ConditionalOnProperty (spring.cloud.loadbalancer.retry.enabled=false) did not find property 'spring.cloud.loadbalancer.retry.enabled'; NestedCondition on LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition.RetryTemplateMissing @ConditionalOnMissingClass did not find unwanted class 'org.springframework.retry.support.RetryTemplate' (LoadBalancerAutoConfiguration.RetryMissingOrDisabledCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig#lbRestClientPostProcessor matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor; SearchStrategy: all) found bean 'loadBalancerInterceptor'; @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig#restTemplateCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - AnyNestedCondition 2 matched 0 did not; NestedCondition on LoadBalancerBeanPostProcessorAutoConfiguration.OnAnyLoadBalancerImplementationPresentCondition.LoadBalancerClientPresent @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'blockingLoadBalancerClient'; NestedCondition on LoadBalancerBeanPostProcessorAutoConfiguration.OnAnyLoadBalancerImplementationPresentCondition.ReactiveLoadBalancerFactoryPresent @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory; SearchStrategy: all) found bean 'loadBalancerClientFactory' (LoadBalancerBeanPostProcessorAutoConfiguration.OnAnyLoadBalancerImplementationPresentCondition)

   LoadBalancerBeanPostProcessorAutoConfiguration.ReactorDeferringLoadBalancerFilterConfig matched:
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory; SearchStrategy: all) found bean 'loadBalancerClientFactory' (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.cache.CacheManager', 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' (OnClassCondition)
      - AllNestedConditions 2 matched 0 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition.LoadBalancerCacheEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.cache.enabled) matched; NestedCondition on LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition.LoadBalancerEnabled @ConditionalOnProperty (spring.cloud.loadbalancer.enabled=true) matched (LoadBalancerCacheAutoConfiguration.OnLoadBalancerCachingEnabledCondition)

   LoadBalancerCacheAutoConfiguration.DefaultLoadBalancerCacheManagerConfiguration matched:
      - @ConditionalOnClass found required class 'com.stoyanr.evictor.ConcurrentMapWithTimedEviction' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineCacheManagerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cache.caffeine.CaffeineCacheManager'; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineClassMissing @ConditionalOnMissingClass did not find unwanted class 'com.github.benmanes.caffeine.cache.Caffeine' (LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition)

   LoadBalancerCacheAutoConfiguration.DefaultLoadBalancerCacheManagerConfiguration#defaultLoadBalancerCacheManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerCacheAutoConfiguration.LoadBalancerCacheManagerWarnConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineCacheManagerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cache.caffeine.CaffeineCacheManager'; NestedCondition on LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition.CaffeineClassMissing @ConditionalOnMissingClass did not find unwanted class 'com.github.benmanes.caffeine.cache.Caffeine' (LoadBalancerCacheAutoConfiguration.OnCaffeineCacheMissingCondition)

   LoadBalancerEurekaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched (OnPropertyCondition)

   LoadBalancerEurekaAutoConfiguration#eurekaLoadBalancerProperties matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveCompositeDiscoveryClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   ReactiveMultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.http.codec.multipart.DefaultPartHttpMessageReader', 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)

   ReactiveWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)

   ReactiveWebServerFactoryConfiguration.EmbeddedNetty matched:
      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.server.ReactiveWebServerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ReactorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   ReactorLoadBalancerClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory; SearchStrategy: all) found bean 'loadBalancerClientFactory' (OnBeanCondition)

   ReactorLoadBalancerClientAutoConfiguration#loadBalancerExchangeFilterFunction matched:
      - @ConditionalOnProperty (spring.cloud.loadbalancer.retry.enabled=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ReactorNettyConfigurations.ReactorResourceFactoryConfiguration#reactorResourceFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.client.ReactorResourceFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.refresh.enabled) matched (OnPropertyCondition)

   RefreshAutoConfiguration#configDataContextRefresher matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.refresh.ConfigDataContextRefresher; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - NoneNestedConditions 0 matched 3 did not; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnBootstrapEnabled @ConditionalOnProperty (spring.cloud.bootstrap.enabled) did not find property 'spring.cloud.bootstrap.enabled'; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnUseLegacyProcessingEnabled @ConditionalOnProperty (spring.config.use-legacy-processing) did not find property 'spring.config.use-legacy-processing'; NestedCondition on ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition.OnBootstrapMarkerClassPresent @ConditionalOnClass did not find required class 'org.springframework.cloud.bootstrap.marker.Marker' (ConditionalOnBootstrapDisabled.OnBootstrapDisabledCondition)

   RefreshAutoConfiguration#loggingRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.logging.LoggingRebinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScope matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScopeLifecycle matched:
      - @ConditionalOnProperty (spring.cloud.refresh.on-restart.enabled) matched (OnPropertyCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleDiscoveryClientAutoConfiguration#simpleDiscoveryProperties matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleReactiveDiscoveryClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UtilAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.util.enabled) matched (OnPropertyCondition)

   UtilAutoConfiguration#inetUtils matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.util.InetUtils; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientAutoConfiguration#webClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebClientAutoConfiguration#webClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebClientAutoConfiguration.WebClientCodecsConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.codec.CodecCustomizer; SearchStrategy: all) found beans 'jacksonCodecCustomizer', 'defaultCodecCustomizer', 'defaultPartHttpMessageReaderCustomizer' (OnBeanCondition)

   WebClientAutoConfiguration.WebClientCodecsConfiguration#exchangeStrategiesCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebFluxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.config.WebFluxConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebFluxAutoConfiguration.EnableWebFluxConfiguration#localeContextResolver matched:
      - @ConditionalOnMissingBean (names: localeContextResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebFluxAutoConfiguration.EnableWebFluxConfiguration#webSessionManager matched:
      - @ConditionalOnMissingBean (names: webSessionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSessionIdResolverAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)

   WebSessionIdResolverAutoConfiguration#webSessionIdResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.server.session.WebSessionIdResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BlockingLoadBalancerClientAutoConfiguration.BlockingLoadBalancerRetryConfig:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorFactoryConfiguration.HttpClient5:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.hc.core5.reactive.ReactiveResponseConsumer' (OnClassCondition)

   ClientHttpConnectorFactoryConfiguration.JdkClient:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory; SearchStrategy: all) found beans of type 'org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory' reactorClientHttpConnectorFactory (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'java.net.http.HttpClient' (OnClassCondition)

   CloudHypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.Link' (OnClassCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.DiscoveryClientOptionalArgsTlsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.WebClientConfiguration:
      Did not match:
         - @ConditionalOnProperty (eureka.client.webclient.enabled=true) did not find property 'webclient.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient'; @ConditionalOnMissingClass did not find unwanted class 'org.glassfish.jersey.client.JerseyClient' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration.WebClientNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   DispatcherServletAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.Servlet' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaClientConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.OnPropertyDisabled @ConditionalOnProperty (eureka.client.refresh.enable=false) did not find property 'eureka.client.refresh.enable'; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingScope @ConditionalOnMissingBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found beans of type 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingClass @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   EurekaClientConfigServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.server.config.ConfigServerProperties' (OnClassCondition)

   EurekaDiscoveryClientConfiguration.EurekaHealthCheckHandlerConfiguration:
      Did not match:
         - @ConditionalOnProperty (eureka.client.healthcheck.enabled) did not find property 'eureka.client.healthcheck.enabled' (OnPropertyCondition)

   EurekaReactiveDiscoveryClientConfiguration#eurekaReactiveDiscoveryClientHealthIndicator:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.ReactiveHealthIndicator' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GatewayAutoConfiguration#grpcSslConfigurer:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.grpc.Channel' (OnClassCondition)

   GatewayAutoConfiguration#jsonToGRPCFilterFactory:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.grpc.Channel' (OnClassCondition)

   GatewayAutoConfiguration#principalNameKeyResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.gateway.filter.ratelimit.RateLimiter; SearchStrategy: all) did not find any beans of type org.springframework.cloud.gateway.filter.ratelimit.RateLimiter (OnBeanCondition)

   GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.gateway.filter.ratelimit.RateLimiter,org.springframework.cloud.gateway.filter.ratelimit.KeyResolver; SearchStrategy: all) did not find any beans of type org.springframework.cloud.gateway.filter.ratelimit.RateLimiter, org.springframework.cloud.gateway.filter.ratelimit.KeyResolver (OnBeanCondition)

   GatewayAutoConfiguration.GatewayActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   GatewayAutoConfiguration.NettyConfiguration#nettyServerWiretapCustomizer:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.gateway.httpserver.wiretap) did not find property 'spring.cloud.gateway.httpserver.wiretap' (OnPropertyCondition)

   GatewayAutoConfiguration.TokenRelayConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.client.OAuth2AuthorizedClient', 'org.springframework.security.web.server.SecurityWebFilterChain' (OnClassCondition)

   GatewayClassPathWarningAutoConfiguration.SpringMvcFoundOnClasspathConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   GatewayClassPathWarningAutoConfiguration.WebfluxMissingFromClasspathConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   GatewayMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   GatewayNoLoadBalancerClientAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.loadbalancer.core.ReactorLoadBalancer' (OnClassCondition)

   GatewayReactiveOAuth2AutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.OAuth2AuthorizedClient' (OnClassCondition)

   GatewayRedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisTemplate' (OnClassCondition)

   GatewayResilience4JCircuitBreakerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.circuitbreaker.resilience4j.ReactiveResilience4JAutoConfiguration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HttpEncodingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 0 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication found ConfigurableReactiveWebEnvironment (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JdbcClientAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate' (OnBeanCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) found different value in property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerCacheAutoConfiguration.CaffeineLoadBalancerCacheManagerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   LoadBalancerEurekaAutoConfiguration#zoneConfig:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig; SearchStrategy: all) found beans of type 'org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig' zoneConfig (OnBeanCondition)

   LoadBalancerStatsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   LocalResponseCacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2LoadBalancerClientAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.oauth2.load-balanced.enabled) did not find property 'spring.cloud.oauth2.load-balanced.enabled' (OnPropertyCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveCommonsClientAutoConfiguration.ReactiveDiscoveryLoadBalancerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.ReactiveHealthIndicator' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration#forwardedHeaderTransformer:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ReactiveWebServerFactoryAutoConfiguration#tomcatReactiveWebServerFactoryCustomizer:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ReactiveWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.ee10.servlet.ServletHolder' (OnClassCondition)

   ReactiveWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ReactiveWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.Undertow' (OnClassCondition)

   ReactorLoadBalancerClientAutoConfiguration#loadBalancerRetryPolicy:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.loadbalancer.retry.enabled=true) did not find property 'spring.cloud.loadbalancer.retry.enabled' (OnPropertyCondition)

   ReactorLoadBalancerClientAutoConfiguration#retryableLoadBalancerExchangeFilterFunction:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.loadbalancer.retry.enabled=true) did not find property 'spring.cloud.loadbalancer.retry.enabled' (OnPropertyCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RefreshAutoConfiguration#legacyContextRefresher:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnBootstrapEnabled @ConditionalOnProperty (spring.cloud.bootstrap.enabled) did not find property 'spring.cloud.bootstrap.enabled'; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnUseLegacyProcessingEnabled @ConditionalOnProperty (spring.config.use-legacy-processing) did not find property 'spring.config.use-legacy-processing'; NestedCondition on ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition.OnBootstrapMarkerClassPresent @ConditionalOnClass did not find required class 'org.springframework.cloud.bootstrap.marker.Marker' (ConditionalOnBootstrapEnabled.OnBootstrapEnabledCondition)

   RefreshAutoConfiguration.JpaInvokerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   RefreshEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   ResourceServerTokenRelayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)

   RestClientAutoConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 0 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication found ConfigurableReactiveWebEnvironment (NotReactiveWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)

   RestTemplateAutoConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 0 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication found ConfigurableReactiveWebEnvironment (NotReactiveWebApplicationCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.ServletRequest' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SimpleReactiveDiscoveryClientAutoConfiguration.HealthConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.health.ReactiveHealthIndicator' (OnClassCondition)

   SimpleUrlHandlerMappingGlobalCorsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping) did not find property 'spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.reactive.handler.SimpleUrlHandlerMapping' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebFluxAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.webflux.hiddenmethod.filter.enabled) found different value in property 'enabled' (OnPropertyCondition)

   WebFluxAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.webflux.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebFluxAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.Servlet' (OnClassCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.Servlet' (OnClassCondition)

   WebSocketServletAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.servlet.Servlet' (OnClassCondition)

   WritableEnvironmentEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.cloud.client.CommonsClientAutoConfiguration

    org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration

    org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration

    org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration

    org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration

    org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration

    org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-05-11 13:22:41.033 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition token applying {_genkey_0=/auth/**} to Path
2024-05-11 13:22:41.035 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: token
2024-05-11 13:22:41.035 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition user-management applying {_genkey_0=/users/**} to Path
2024-05-11 13:22:41.037 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:148)] - RouteDefinition user-management applying filter {} to UserManagementFilter
2024-05-11 13:22:41.038 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: user-management
2024-05-11 13:22:41.038 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition selling applying {_genkey_0=/selling/**, _genkey_1=/campaign/**, _genkey_2=/product-modify/**} to Path
2024-05-11 13:22:41.040 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:148)] - RouteDefinition selling applying filter {} to SellingFilter
2024-05-11 13:22:41.041 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: selling
2024-05-11 13:22:41.041 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition report applying {_genkey_0=/sales/**} to Path
2024-05-11 13:22:41.042 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:148)] - RouteDefinition report applying filter {} to ReportFilter
2024-05-11 13:22:41.043 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: report
2024-05-11 13:22:41.043 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lookup(RouteDefinitionRouteLocator.java:222)] - RouteDefinition product applying {_genkey_0=/product/**} to Path
2024-05-11 13:22:41.045 DEBUG [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$getRoutes$4(RouteDefinitionRouteLocator.java:124)] - RouteDefinition matched: product
2024-05-11 13:22:41.049 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplicationTests in 13.846 seconds (process running for 15.222)
2024-05-11 13:22:41.051 DEBUG [main] [org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:77)] - Application availability state LivenessState changed to CORRECT
2024-05-11 13:22:41.053 DEBUG [main] [org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:77)] - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-05-11 13:22:41.055 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.057 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.067 DEBUG [main] [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:114)] - Before test method: class [GatewayApplicationTests], method [contextLoads], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null]
2024-05-11 13:22:41.068 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.068 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.861 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.866 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.867 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.868 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.868 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.870 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.872 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 10, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.872 DEBUG [main] [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:114)] - After test method: class [GatewayApplicationTests], method [contextLoads], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null]
2024-05-11 13:22:41.882 DEBUG [main] [org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:276)] - Spring test ApplicationContext cache statistics: [DefaultContextCache@37c5b8e8 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 11, missCount = 1, failureCount = 0]
2024-05-11 13:22:41.882 DEBUG [main] [org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:154)] - After test class: class [GatewayApplicationTests], class annotated with @DirtiesContext [false] with mode [null]
2024-05-11 13:22:41.926 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1122)] - Closing org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext@40298285, started on Sat May 11 13:22:27 TRT 2024
2024-05-11 13:22:41.927 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-11 13:22:41.927 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1715422961927, current=DOWN, previous=UP]
2024-05-11 13:22:41.927 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:93)] - Executing on-demand update of local InstanceInfo
2024-05-11 13:22:41.928 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:97)] - Canceling the latest scheduled update, it will be rescheduled at the end of on demand update
2024-05-11 13:22:41.928 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088: registering service...
2024-05-11 13:22:41.928 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.getHostCandidates(RetryableEurekaHttpClient.java:174)] - Clearing quarantined list of size 1
2024-05-11 13:22:41.929 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476)] - Stopping beans in phase 2147483647
2024-05-11 13:22:41.930 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476)] - Stopping beans in phase 0
2024-05-11 13:22:41.932 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - HTTP POST http://eureka-server:8761/eureka/apps/GATEWAY
2024-05-11 13:22:41.932 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - Accept=[application/json, application/*+json]
2024-05-11 13:22:41.934 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:359)] - Successfully stopped bean 'reactorResourceFactory'
2024-05-11 13:22:41.934 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:359)] - Successfully stopped bean 'refreshScopeLifecycle'
2024-05-11 13:22:41.934 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:476)] - Stopping beans in phase -2147483647
2024-05-11 13:22:41.935 DEBUG [SpringApplicationShutdownHook] [org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$4(DefaultLifecycleProcessor.java:348)] - Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-05-11 13:22:41.936 DEBUG [SpringApplicationShutdownHook] [org.springframework.beans.factory.support.DisposableBeanAdapter.logDestroyMethodCompletion(DisposableBeanAdapter.java:361)] - Custom destroy method 'close' on bean with name 'eurekaServiceRegistry' completed
2024-05-11 13:22:41.936 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - Writing [InstanceInfo [instanceId = DESKTOP-1U3DIDU.local:gateway:8088, appName = GATEWAY, hostName = DESKTOP-1U3DIDU.local, status = DOWN, ipAddr = 192.168.1.108, port = 8088, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2dc5d1c8] as "application/json"
2024-05-11 13:22:41.937 DEBUG [SpringApplicationShutdownHook] [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:313)] - Shutting down ExecutorService 'applicationTaskExecutor'
2024-05-11 13:22:41.939 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:164)] - ex-0000000003 preparing request execution
2024-05-11 13:22:41.939 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-11 13:22:41.939 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:181)] - ex-0000000003 target auth state: UNCHALLENGED
2024-05-11 13:22:41.939 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:187)] - ex-0000000003 proxy auth state: UNCHALLENGED
2024-05-11 13:22:41.939 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:123)] - ex-0000000003 acquiring connection with route {}->http://eureka-server:8761
2024-05-11 13:22:41.939 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:101)] - ex-0000000003 acquiring endpoint (180000 MILLISECONDS)
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:296)] - ex-0000000003 endpoint lease request (180000 MILLISECONDS) [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:318)] - ex-0000000003 endpoint leased [route: {}->http://eureka-server:8761][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:360)] - ex-0000000003 acquired ep-0000000003
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:116)] - ex-0000000003 acquired endpoint ep-0000000003
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:130)] - ex-0000000003 opening connection {}->http://eureka-server:8761
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:160)] - ep-0000000003 connecting endpoint (180000 MILLISECONDS)
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:444)] - ep-0000000003 connecting endpoint to http://eureka-server:8761 (180000 MILLISECONDS)
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:140)] - eureka-server resolving remote address
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.DefaultManagedHttpClientConnection.close(DefaultManagedHttpClientConnection.java:175)] - http-outgoing-2 close connection IMMEDIATE
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:240)] - ep-0000000003 endpoint closed
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:244)] - ep-0000000003 discarding endpoint
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:389)] - ep-0000000003 releasing endpoint
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:412)] - ep-0000000003 connection is not kept alive
2024-05-11 13:22:41.940 DEBUG [DiscoveryClient-InstanceInfoReplicator-0] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:421)] - ep-0000000003 connection released [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:41.940 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:84)] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka-server:8761/eureka/}, exception=I/O error on POST request for "http://eureka-server:8761/eureka/apps/GATEWAY": eureka-server stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://eureka-server:8761/eureka/apps/GATEWAY": eureka-server
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.UnknownHostException: eureka-server
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1532)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1384)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1305)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:43)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:143)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)
	... 22 more

2024-05-11 13:22:41.940 WARN [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] - Request execution failed with message: I/O error on POST request for "http://eureka-server:8761/eureka/apps/GATEWAY": eureka-server
2024-05-11 13:22:41.940 WARN [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:822)] - DiscoveryClient_GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) [eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-2.0.1.jar:2.0.1]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:833) [?:?]
2024-05-11 13:22:41.940 WARN [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-2.0.1.jar:2.0.1]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:833) [?:?]
2024-05-11 13:22:41.942 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-11 13:22:41.942 DEBUG [SpringApplicationShutdownHook] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.getHostCandidates(RetryableEurekaHttpClient.java:174)] - Clearing quarantined list of size 1
2024-05-11 13:22:41.946 DEBUG [SpringApplicationShutdownHook] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - HTTP DELETE http://eureka-server:8761/eureka/apps/GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088
2024-05-11 13:22:41.946 DEBUG [SpringApplicationShutdownHook] [org.springframework.core.log.CompositeLog.debug(CompositeLog.java:127)] - Accept=[application/json, application/*+json]
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:164)] - ex-0000000004 preparing request execution
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:181)] - ex-0000000004 target auth state: UNCHALLENGED
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:187)] - ex-0000000004 proxy auth state: UNCHALLENGED
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:123)] - ex-0000000004 acquiring connection with route {}->http://eureka-server:8761
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:101)] - ex-0000000004 acquiring endpoint (180000 MILLISECONDS)
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:296)] - ex-0000000004 endpoint lease request (180000 MILLISECONDS) [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:318)] - ex-0000000004 endpoint leased [route: {}->http://eureka-server:8761][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$3.get(PoolingHttpClientConnectionManager.java:360)] - ex-0000000004 acquired ep-0000000004
2024-05-11 13:22:41.947 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:116)] - ex-0000000004 acquired endpoint ep-0000000004
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:130)] - ex-0000000004 opening connection {}->http://eureka-server:8761
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:160)] - ep-0000000004 connecting endpoint (180000 MILLISECONDS)
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:444)] - ep-0000000004 connecting endpoint to http://eureka-server:8761 (180000 MILLISECONDS)
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:140)] - eureka-server resolving remote address
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.DefaultManagedHttpClientConnection.close(DefaultManagedHttpClientConnection.java:175)] - http-outgoing-3 close connection IMMEDIATE
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:240)] - ep-0000000004 endpoint closed
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.classic.InternalExecRuntime.discardEndpoint(InternalExecRuntime.java:244)] - ep-0000000004 discarding endpoint
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:389)] - ep-0000000004 releasing endpoint
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:412)] - ep-0000000004 connection is not kept alive
2024-05-11 13:22:41.948 DEBUG [SpringApplicationShutdownHook] [org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(PoolingHttpClientConnectionManager.java:421)] - ep-0000000004 connection released [route: {}->http://eureka-server:8761][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2024-05-11 13:22:41.948 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:84)] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka-server:8761/eureka/}, exception=I/O error on DELETE request for "http://eureka-server:8761/eureka/apps/GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088": eureka-server stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://eureka-server:8761/eureka/apps/GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088": eureka-server
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1183)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1144)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1090)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.UnknownHostException: eureka-server
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1532)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1384)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1305)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:43)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:143)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)
	... 39 more

2024-05-11 13:22:41.948 WARN [SpringApplicationShutdownHook] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] - Request execution failed with message: I/O error on DELETE request for "http://eureka-server:8761/eureka/apps/GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088": eureka-server
2024-05-11 13:22:41.948 ERROR [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)] - DiscoveryClient_GATEWAY/DESKTOP-1U3DIDU.local:gateway:8088 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.1.jar:2.0.1]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.1.jar:2.0.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.0.jar:4.1.0]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.0.jar:4.1.0]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.3.jar:6.1.3]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1183) ~[spring-context-6.1.3.jar:6.1.3]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1144) ~[spring-context-6.1.3.jar:6.1.3]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1090) ~[spring-context-6.1.3.jar:6.1.3]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.2.2.jar:3.2.2]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) [?:?]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) [spring-boot-3.2.2.jar:3.2.2]
	at java.base/java.lang.Thread.run(Thread.java:833) [?:?]
2024-05-11 13:22:41.954 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
