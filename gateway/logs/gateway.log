2024-04-13 12:38:38.511 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-13 12:38:39.060 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-13 12:38:39.113 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-13 12:38:45.770 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-13 12:38:46.318 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-13 12:38:46.354 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.360 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.401 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.427 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.430 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801008250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.435 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.483 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.512 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.528 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.539 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.550 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.565 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.627 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.643 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.652 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.661 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.670 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.689 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-13 12:38:46.712 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:46.745 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-13 12:38:54.224 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-13 12:38:54.228 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-13 12:38:54.232 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-13 12:38:54.250 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-13 12:38:54.267 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-13 12:38:54.297 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-13 12:38:54.313 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-13 12:38:54.321 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-13 12:38:54.329 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-13 12:38:54.358 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-13 12:38:54.364 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-13 12:38:54.366 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-13 12:38:54.367 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-13 12:38:54.368 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-13 12:38:55.880 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-13 12:38:56.112 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-13 12:38:56.333 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-13 12:38:56.905 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-13 12:38:56.937 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-13 12:38:57.186 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-13 12:38:57.200 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-13 12:38:57.221 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-13 12:38:57.223 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-13 12:38:57.226 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-13 12:38:57.230 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-13 12:38:57.238 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-13 12:38:59.858 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-13 12:38:59.892 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-13 12:38:59.916 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-13 12:38:59.941 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1713011939939 with initial instances count: 0
2024-04-13 12:38:59.948 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-13 12:38:59.953 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713011939952, current=UP, previous=STARTING]
2024-04-13 12:38:59.959 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088: registering service...
2024-04-13 12:39:00.591 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088 - registration status: 204
2024-04-13 12:39:01.026 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-13 12:39:01.047 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-13 12:39:01.226 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 24.576 seconds (process running for 29.446)
2024-04-13 12:39:29.874 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-13 12:39:29.875 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-13 12:39:29.876 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-13 12:39:29.876 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-13 12:39:29.877 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-13 12:39:29.878 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-13 12:39:29.878 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-13 12:39:29.888 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-13 12:39:59.901 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-13 12:39:59.902 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-13 12:39:59.903 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-13 12:39:59.904 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-13 12:39:59.905 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-13 12:39:59.906 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-13 12:39:59.909 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-13 12:39:59.922 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-13 12:43:57.260 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-13 12:48:57.264 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-13 12:50:57.615 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:50:57.619 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-13 12:51:08.648 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:51:08.650 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-13 12:51:13.355 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:51:13.356 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-13 12:51:27.026 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:51:27.028 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-13 12:51:30.453 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:51:30.455 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-13 12:51:36.003 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:51:36.004 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-13 12:52:28.526 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:52:28.528 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-13 12:52:28.529 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-13 12:53:08.057 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:53:08.059 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:53:31.435 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:53:31.438 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:53:34.640 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:53:34.643 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:53:52.317 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:53:52.319 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:53:57.267 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-13 12:54:34.278 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:54:34.280 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:55:02.560 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:55:02.562 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:55:12.905 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:55:12.907 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:55:14.628 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:55:14.630 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:55:52.179 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:55:52.182 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-13 12:55:52.183 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-13 12:56:03.879 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:56:03.881 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:56:08.270 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:56:08.272 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-13 12:56:08.273 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-13 12:56:31.345 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:56:31.347 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:56:46.090 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:56:46.092 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-13 12:56:46.093 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-13 12:56:55.661 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:56:55.662 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:57:14.693 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:57:14.695 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:57:23.138 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:57:23.140 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:57:38.000 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:57:38.002 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:57:45.888 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:57:45.890 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:57:58.895 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:57:58.897 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:58:05.976 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:58:05.978 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-13 12:58:05.979 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-13 12:58:10.906 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:58:10.908 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-13 12:58:10.910 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-13 12:58:19.595 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:58:19.597 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:58:43.264 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:58:43.266 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-13 12:58:57.270 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-13 12:59:01.836 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:59:01.839 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-13 12:59:13.579 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-13 12:59:13.582 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
