2024-04-06 10:39:24.484 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-06 10:39:24.850 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-06 10:39:24.864 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-06 10:39:30.171 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-06 10:39:30.758 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 10:39:30.793 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:30.803 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:30.858 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:30.912 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:30.921 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801008250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:30.927 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:30.997 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.044 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.055 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.083 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.099 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.110 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.151 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.161 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.181 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.200 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.214 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.225 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 10:39:31.236 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:31.278 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:39:41.708 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-06 10:39:41.732 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-06 10:39:41.737 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-06 10:39:41.745 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-06 10:39:41.758 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-06 10:39:41.774 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-06 10:39:41.789 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-06 10:39:41.801 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-06 10:39:41.808 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-06 10:39:41.818 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-06 10:39:41.828 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-06 10:39:41.834 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-06 10:39:41.845 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-06 10:39:41.853 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-06 10:39:43.247 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-06 10:39:43.450 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-06 10:39:43.643 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-06 10:39:43.970 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-06 10:39:43.990 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 10:39:44.085 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 10:39:44.087 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 10:39:44.089 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 10:39:44.091 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 10:39:44.092 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 10:39:44.093 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-06 10:39:44.101 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 10:39:47.329 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 10:39:47.366 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-06 10:39:47.410 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-06 10:39:47.452 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1712399987449 with initial instances count: 0
2024-04-06 10:39:47.458 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-06 10:39:47.461 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712399987461, current=UP, previous=STARTING]
2024-04-06 10:39:47.489 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/1c0d8c8c28f9:gateway:8088: registering service...
2024-04-06 10:39:48.646 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/1c0d8c8c28f9:gateway:8088 - registration status: 204
2024-04-06 10:39:48.881 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-06 10:39:48.911 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-06 10:39:49.020 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 26.937 seconds (process running for 32.238)
2024-04-06 10:40:17.350 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 10:40:17.353 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 10:40:17.354 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 10:40:17.356 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 10:40:17.358 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 10:40:17.359 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-06 10:40:17.359 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 10:40:17.379 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 10:41:38.484 WARN [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:25)] - Expired token
2024-04-06 10:41:38.486 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-06 10:42:14.427 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:14.429 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:14.467 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:29.133 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:29.135 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:29.136 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:31.378 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:31.380 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:31.382 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:32.167 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:32.169 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:32.171 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:32.798 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:32.800 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:32.802 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:33.509 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:33.512 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:33.513 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:34.183 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:34.185 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:34.186 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:34.849 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:34.851 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:34.853 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:35.454 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:35.456 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:35.458 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:36.055 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:36.057 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:36.059 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:36.669 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:36.671 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:36.673 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:37.291 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:37.294 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:37.295 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:42:37.909 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:42:37.912 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:42:37.914 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 10:43:29.477 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-06 10:43:29.478 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712400209478, current=DOWN, previous=UP]
2024-04-06 10:43:29.479 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/1c0d8c8c28f9:gateway:8088: registering service...
2024-04-06 10:43:29.488 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/1c0d8c8c28f9:gateway:8088 - registration status: 204
2024-04-06 10:43:31.508 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-06 10:43:34.512 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-06 10:43:34.520 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/1c0d8c8c28f9:gateway:8088 - deregister  status: 200
2024-04-06 10:43:34.525 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-04-06 10:47:17.988 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-06 10:47:18.206 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-06 10:47:18.211 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-06 10:47:22.770 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-06 10:47:23.170 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 10:47:23.178 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.189 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.225 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.247 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.278 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801005c80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.296 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.338 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.368 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.378 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.407 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.419 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.430 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.477 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.481 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.488 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.500 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.530 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.549 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 10:47:23.558 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:23.578 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 10:47:29.226 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-06 10:47:29.237 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-06 10:47:29.247 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-06 10:47:29.257 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-06 10:47:29.271 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-06 10:47:29.289 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-06 10:47:29.298 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-06 10:47:29.309 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-06 10:47:29.317 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-06 10:47:29.327 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-06 10:47:29.337 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-06 10:47:29.347 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-06 10:47:29.357 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-06 10:47:29.369 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-06 10:47:31.191 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-06 10:47:31.318 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-06 10:47:31.598 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-06 10:47:31.967 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-06 10:47:31.997 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 10:47:32.097 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 10:47:32.099 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 10:47:32.101 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 10:47:32.103 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 10:47:32.105 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 10:47:32.106 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-06 10:47:32.108 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 10:47:33.900 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 10:47:33.916 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-06 10:47:33.929 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-06 10:47:33.959 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1712400453957 with initial instances count: 0
2024-04-06 10:47:33.970 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-06 10:47:33.978 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712400453977, current=UP, previous=STARTING]
2024-04-06 10:47:33.999 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/68d3bf999135:gateway:8088: registering service...
2024-04-06 10:47:34.532 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/68d3bf999135:gateway:8088 - registration status: 204
2024-04-06 10:47:34.727 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-06 10:47:34.737 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-06 10:47:34.813 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 18.489 seconds (process running for 23.294)
2024-04-06 10:48:03.909 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 10:48:03.911 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 10:48:03.911 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 10:48:03.912 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 10:48:03.913 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 10:48:03.913 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-06 10:48:03.913 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 10:48:03.926 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 10:48:29.789 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:48:29.792 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:51:42.871 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:51:42.873 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:52:32.109 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 10:54:12.532 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:54:12.536 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:54:16.130 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 10:54:16.132 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 10:57:32.112 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:02:32.117 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:07:32.121 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:11:53.074 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-06 11:11:53.076 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712401913075, current=DOWN, previous=UP]
2024-04-06 11:11:53.077 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/68d3bf999135:gateway:8088: registering service...
2024-04-06 11:11:53.090 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/68d3bf999135:gateway:8088 - registration status: 204
2024-04-06 11:11:55.112 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-06 11:11:58.116 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-06 11:11:58.126 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/68d3bf999135:gateway:8088 - deregister  status: 200
2024-04-06 11:11:58.131 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-04-06 11:16:05.549 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-06 11:16:06.223 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-06 11:16:06.236 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-06 11:16:10.761 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-06 11:16:11.138 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 11:16:11.146 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.162 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.178 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.184 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.187 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x000000080100d350] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.194 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.224 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.236 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.238 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.241 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.248 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.254 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.313 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.327 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.337 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.348 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.358 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.377 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 11:16:11.380 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:11.384 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 11:16:19.448 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-06 11:16:19.457 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-06 11:16:19.466 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-06 11:16:19.477 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-06 11:16:19.487 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-06 11:16:19.499 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-06 11:16:19.511 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-06 11:16:19.517 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-06 11:16:19.521 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-06 11:16:19.526 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-06 11:16:19.536 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-06 11:16:19.578 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-06 11:16:19.586 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-06 11:16:19.594 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-06 11:16:21.852 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-06 11:16:22.118 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-06 11:16:22.254 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-06 11:16:22.917 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-06 11:16:22.959 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:16:23.289 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 11:16:23.296 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 11:16:23.306 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 11:16:23.346 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 11:16:23.350 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 11:16:23.360 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-06 11:16:23.366 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 11:16:26.070 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 11:16:26.107 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-06 11:16:26.113 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-06 11:16:26.129 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1712402186127 with initial instances count: 0
2024-04-06 11:16:26.136 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-06 11:16:26.138 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712402186138, current=UP, previous=STARTING]
2024-04-06 11:16:26.148 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/3e3b1a4cb30a:gateway:8088: registering service...
2024-04-06 11:16:26.831 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/3e3b1a4cb30a:gateway:8088 - registration status: 204
2024-04-06 11:16:26.848 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-06 11:16:26.879 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-06 11:16:26.993 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 23.159 seconds (process running for 28.637)
2024-04-06 11:16:48.033 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:48.036 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:48.110 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:49.637 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:49.639 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:49.643 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:50.344 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:50.346 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:50.348 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:50.915 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:50.917 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:50.919 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:51.723 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:51.727 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:51.729 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:52.403 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:52.405 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:52.407 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:56.107 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 11:16:56.108 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 11:16:56.108 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 11:16:56.108 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 11:16:56.109 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 11:16:56.109 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-06 11:16:56.110 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 11:16:56.122 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 11:16:56.686 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:56.689 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:56.691 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:57.364 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:57.367 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:57.369 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:16:57.939 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:16:57.942 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:16:57.944 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: report
2024-04-06 11:17:00.101 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:01.990 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:02.826 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:03.497 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:04.136 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:04.914 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:05.538 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:07.401 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:08.098 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:08.707 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:09.307 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:09.911 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:11.760 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:12.460 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:13.111 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:13.800 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:14.469 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:15.139 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:16.257 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:16.919 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:17.597 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:18.229 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:18.930 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:19.848 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:20.532 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:21.262 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:21.884 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:22.912 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:23.551 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:24.205 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:24.856 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:25.491 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:26.134 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 11:17:44.316 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:17:44.318 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:18:05.542 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:18:05.546 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:20:02.920 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:20:02.922 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:20:29.525 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:20:29.527 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:21:14.874 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:21:14.877 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:21:23.376 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:22:09.818 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:22:09.820 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:26:23.378 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:28:50.045 INFO [reactor-http-epoll-5] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 11:28:50.047 INFO [reactor-http-epoll-5] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 11:31:23.380 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:36:23.382 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 11:37:54.899 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-06 11:37:54.900 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712403474900, current=DOWN, previous=UP]
2024-04-06 11:37:54.901 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/3e3b1a4cb30a:gateway:8088: registering service...
2024-04-06 11:37:54.915 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/3e3b1a4cb30a:gateway:8088 - registration status: 204
2024-04-06 11:37:56.929 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-06 11:37:59.932 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-06 11:37:59.939 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/3e3b1a4cb30a:gateway:8088 - deregister  status: 200
2024-04-06 11:37:59.944 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-04-06 12:05:10.020 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-06 12:05:10.475 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-06 12:05:10.500 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-06 12:05:15.794 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-06 12:05:16.072 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 12:05:16.079 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.096 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.122 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.156 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.163 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801004400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.170 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.200 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.257 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.293 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.296 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.303 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.323 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.363 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.368 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.404 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.411 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.416 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.421 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-06 12:05:16.433 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:16.444 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-06 12:05:23.275 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-06 12:05:23.285 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-06 12:05:23.291 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-06 12:05:23.304 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-06 12:05:23.312 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-06 12:05:23.326 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-06 12:05:23.333 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-06 12:05:23.361 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-06 12:05:23.363 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-06 12:05:23.365 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-06 12:05:23.366 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-06 12:05:23.369 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-06 12:05:23.374 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-06 12:05:23.378 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-06 12:05:25.985 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-06 12:05:26.168 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-06 12:05:26.312 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-06 12:05:26.641 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-06 12:05:26.686 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 12:05:26.849 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 12:05:26.850 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 12:05:26.852 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 12:05:26.854 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 12:05:26.856 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 12:05:26.858 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-06 12:05:26.861 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 12:05:28.693 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 12:05:28.717 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-06 12:05:28.730 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-06 12:05:28.784 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1712405128780 with initial instances count: 0
2024-04-06 12:05:28.805 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-06 12:05:28.808 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712405128807, current=UP, previous=STARTING]
2024-04-06 12:05:28.814 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/cc00642fd6b4:gateway:8088: registering service...
2024-04-06 12:05:29.638 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/cc00642fd6b4:gateway:8088 - registration status: 204
2024-04-06 12:05:29.810 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-06 12:05:29.842 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-06 12:05:29.954 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 21.169 seconds (process running for 26.638)
2024-04-06 12:05:58.713 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-06 12:05:58.714 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-06 12:05:58.715 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-06 12:05:58.716 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-06 12:05:58.716 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-06 12:05:58.717 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-06 12:05:58.717 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-06 12:05:58.729 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-06 12:06:01.916 WARN [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:25)] - Expired token
2024-04-06 12:06:01.917 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-06 12:06:08.504 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 12:06:10.324 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 12:06:10.995 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 12:06:11.609 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 12:06:12.154 WARN [reactor-http-epoll-3] [org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse(RoundRobinLoadBalancer.java:98)] - No servers available for service: token
2024-04-06 12:06:48.152 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:06:48.155 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-06 12:07:35.069 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:07:35.071 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-06 12:07:39.279 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:07:39.283 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-06 12:08:16.401 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:08:16.403 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:08:23.894 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:08:23.896 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:08:32.897 WARN [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:25)] - Expired token
2024-04-06 12:08:32.897 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-06 12:08:45.325 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:08:45.327 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:08:55.443 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:08:55.451 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:09:47.480 WARN [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:25)] - Expired token
2024-04-06 12:09:47.481 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-06 12:09:58.080 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:09:58.082 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:10:14.029 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:10:14.032 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:10:22.540 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-06 12:10:22.542 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-06 12:10:26.868 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-06 12:11:22.848 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-06 12:11:22.850 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1712405482850, current=DOWN, previous=UP]
2024-04-06 12:11:22.851 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/cc00642fd6b4:gateway:8088: registering service...
2024-04-06 12:11:22.859 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/cc00642fd6b4:gateway:8088 - registration status: 204
2024-04-06 12:11:24.878 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-06 12:11:27.880 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-06 12:11:27.889 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/cc00642fd6b4:gateway:8088 - deregister  status: 200
2024-04-06 12:11:27.894 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
