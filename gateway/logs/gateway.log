2024-05-04 16:41:29.062 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 16:41:29.417 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 16:41:29.472 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 16:41:35.123 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 16:41:35.544 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 16:41:35.590 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.595 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.617 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.655 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.658 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x00000008010095b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.666 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.709 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.750 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.757 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.776 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.787 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.797 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.909 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.927 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.934 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.940 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.957 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:35.969 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 16:41:35.980 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:36.035 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:41:42.375 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 16:41:42.378 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 16:41:42.381 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 16:41:42.387 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 16:41:42.388 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 16:41:42.395 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 16:41:42.402 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 16:41:42.404 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 16:41:42.408 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 16:41:42.410 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 16:41:42.413 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 16:41:42.417 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 16:41:42.420 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 16:41:42.421 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 16:41:43.516 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 16:41:43.821 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 16:41:43.981 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 16:41:44.354 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 16:41:44.388 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 16:41:44.597 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 16:41:44.600 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 16:41:44.602 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 16:41:44.606 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 16:41:44.609 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 16:41:44.614 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 16:41:44.615 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 16:41:47.345 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 16:41:47.377 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 16:41:47.404 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 16:41:47.431 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714840907426 with initial instances count: 0
2024-05-04 16:41:47.438 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 16:41:47.448 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714840907447, current=UP, previous=STARTING]
2024-05-04 16:41:47.464 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088: registering service...
2024-05-04 16:41:48.321 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088 - registration status: 204
2024-05-04 16:41:48.406 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 16:41:48.417 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 16:41:48.507 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 21.224 seconds (process running for 26.322)
2024-05-04 16:42:17.379 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 16:42:17.381 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 16:42:17.381 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 16:42:17.382 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 16:42:17.383 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 16:42:17.383 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-05-04 16:42:17.384 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 16:42:17.405 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 16:46:44.631 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 16:51:44.635 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 16:56:44.639 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 16:57:55.035 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 16:57:55.037 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714841875036, current=DOWN, previous=UP]
2024-05-04 16:57:55.038 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088: registering service...
2024-05-04 16:57:55.046 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088 - registration status: 204
2024-05-04 16:57:57.086 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 16:58:00.090 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 16:58:00.097 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088 - deregister  status: 200
2024-05-04 16:58:00.102 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-05-04 16:58:04.003 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 16:58:04.129 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 16:58:04.134 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 16:58:05.686 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 16:58:05.804 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 16:58:05.808 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.811 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.820 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.823 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.825 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801004400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.828 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.837 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.843 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.845 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.848 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.850 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.854 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.867 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.870 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.872 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.876 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.878 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.881 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 16:58:05.883 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:05.888 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 16:58:07.163 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 16:58:07.164 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 16:58:07.165 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 16:58:07.165 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 16:58:07.166 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 16:58:07.167 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 16:58:07.168 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 16:58:07.169 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 16:58:07.170 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 16:58:07.171 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 16:58:07.171 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 16:58:07.172 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 16:58:07.173 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 16:58:07.173 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 16:58:07.499 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 16:58:07.553 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 16:58:07.599 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 16:58:07.663 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 16:58:07.670 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 16:58:07.711 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 16:58:07.712 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 16:58:07.713 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 16:58:07.714 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 16:58:07.715 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 16:58:07.716 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 16:58:07.717 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 16:58:08.246 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 16:58:08.257 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 16:58:08.268 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 16:58:08.289 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714841888289 with initial instances count: 5
2024-05-04 16:58:08.293 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 16:58:08.294 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714841888294, current=UP, previous=STARTING]
2024-05-04 16:58:08.299 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 16:58:08.408 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 16:58:08.664 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 16:58:08.667 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 16:58:08.715 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 5.37 seconds (process running for 6.958)
2024-05-04 16:59:25.506 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 16:59:25.508 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714841965507, current=DOWN, previous=UP]
2024-05-04 16:59:25.509 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 16:59:25.519 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 16:59:27.533 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 16:59:30.537 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 16:59:30.548 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - deregister  status: 200
2024-05-04 16:59:30.556 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-05-04 17:03:22.912 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 17:03:23.152 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 17:03:23.169 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 17:03:27.927 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 17:03:28.247 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:03:28.262 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.282 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.326 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.358 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.361 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801005350] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.366 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.386 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.403 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.426 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.430 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.435 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.440 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.510 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.512 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.517 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.521 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.525 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.532 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:03:28.540 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:28.544 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:03:36.658 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 17:03:36.659 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 17:03:36.678 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 17:03:36.680 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 17:03:36.684 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 17:03:36.696 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 17:03:36.699 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 17:03:36.701 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 17:03:36.703 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 17:03:36.706 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 17:03:36.709 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 17:03:36.728 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 17:03:36.729 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 17:03:36.746 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 17:03:37.895 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 17:03:38.049 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 17:03:38.164 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 17:03:38.388 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 17:03:38.425 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:03:38.627 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:03:38.636 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:03:38.649 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:03:38.666 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:03:38.676 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:03:38.683 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 17:03:38.686 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:03:40.933 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:03:40.957 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 17:03:40.991 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 17:03:41.027 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714842221025 with initial instances count: 0
2024-05-04 17:03:41.036 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 17:03:41.039 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714842221039, current=UP, previous=STARTING]
2024-05-04 17:03:41.047 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:03:41.697 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:03:41.838 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 17:03:41.841 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 17:03:41.952 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 20.69 seconds (process running for 25.976)
2024-05-04 17:03:48.396 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 17:03:48.400 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714842228399, current=DOWN, previous=UP]
2024-05-04 17:03:48.402 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:03:48.425 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:03:50.452 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 17:03:53.455 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 17:03:53.468 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - deregister  status: 200
2024-05-04 17:03:53.481 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-05-04 17:04:16.606 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 17:04:17.136 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 17:04:17.143 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 17:04:23.870 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 17:04:24.230 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:04:24.267 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.279 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.310 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.321 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.340 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801005350] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.344 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.395 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.426 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.446 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.456 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.467 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.481 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.539 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.552 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.579 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.660 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.665 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.679 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:04:24.682 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:24.718 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:04:31.794 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 17:04:31.806 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 17:04:31.819 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 17:04:31.824 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 17:04:31.826 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 17:04:31.827 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 17:04:31.828 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 17:04:31.830 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 17:04:31.832 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 17:04:31.834 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 17:04:31.837 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 17:04:31.844 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 17:04:31.846 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 17:04:31.866 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 17:04:33.507 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 17:04:33.692 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 17:04:33.823 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 17:04:34.042 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 17:04:34.061 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:04:34.163 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:04:34.165 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:04:34.166 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:04:34.167 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:04:34.168 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:04:34.170 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 17:04:34.172 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:04:36.232 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:04:36.247 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 17:04:36.281 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 17:04:36.335 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714842276313 with initial instances count: 0
2024-05-04 17:04:36.356 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 17:04:36.360 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714842276359, current=UP, previous=STARTING]
2024-05-04 17:04:36.376 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:04:37.195 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:04:37.381 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 17:04:37.390 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 17:04:37.476 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 23.551 seconds (process running for 29.862)
2024-05-04 17:05:06.243 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:05:06.244 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:05:06.246 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:05:06.246 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:05:06.247 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:05:06.247 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-05-04 17:05:06.248 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:05:06.271 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:05:50.854 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 17:05:50.857 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714842350857, current=DOWN, previous=UP]
2024-05-04 17:05:50.858 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:05:50.870 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:05:52.894 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 17:05:55.899 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 17:05:55.909 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - deregister  status: 200
2024-05-04 17:05:55.914 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-05-04 17:07:57.485 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 17:07:58.145 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 17:07:58.150 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 17:08:03.876 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 17:08:04.259 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:08:04.278 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.282 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.347 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.355 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.375 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x000000080100b0f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.378 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.410 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.437 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.451 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.454 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.466 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.481 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.554 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.568 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.579 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.586 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.590 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.600 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:08:04.604 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:04.646 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:08:11.448 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 17:08:11.452 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 17:08:11.453 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 17:08:11.454 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 17:08:11.486 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 17:08:11.487 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 17:08:11.489 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 17:08:11.495 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 17:08:11.497 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 17:08:11.498 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 17:08:11.500 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 17:08:11.501 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 17:08:11.504 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 17:08:11.506 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 17:08:14.059 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 17:08:14.473 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 17:08:14.778 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 17:08:15.357 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 17:08:15.382 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:08:15.596 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:08:15.606 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:08:15.616 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:08:15.628 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:08:15.666 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:08:15.677 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 17:08:15.686 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:08:18.960 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:08:18.985 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 17:08:19.005 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 17:08:19.042 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714842499039 with initial instances count: 0
2024-05-04 17:08:19.068 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 17:08:19.077 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714842499076, current=UP, previous=STARTING]
2024-05-04 17:08:19.088 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:08:19.703 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:08:19.895 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 17:08:19.935 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 17:08:20.107 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 24.204 seconds (process running for 29.383)
2024-05-04 17:08:48.984 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:08:48.986 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:08:48.987 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:08:48.987 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:08:48.988 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:08:48.988 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-05-04 17:08:48.988 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:08:49.013 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:13:15.698 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:13:23.172 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 17:13:23.173 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714842803173, current=DOWN, previous=UP]
2024-05-04 17:13:23.173 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:13:23.183 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:13:25.209 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 17:13:28.211 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 17:13:28.221 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - deregister  status: 200
2024-05-04 17:13:28.226 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-05-04 17:19:42.670 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 17:19:43.176 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 17:19:43.186 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 17:19:51.309 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 17:19:51.749 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:19:51.757 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.766 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.805 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.821 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.824 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x000000080100d350] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.863 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.897 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.914 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.927 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.930 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.947 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:51.984 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.044 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.053 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.067 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.079 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.098 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.134 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:19:52.165 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:19:52.177 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:20:01.841 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 17:20:01.861 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 17:20:01.866 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 17:20:01.874 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 17:20:01.886 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 17:20:01.893 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 17:20:01.905 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 17:20:01.925 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 17:20:01.934 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 17:20:01.944 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 17:20:01.948 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 17:20:01.954 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 17:20:01.966 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 17:20:01.984 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 17:20:04.327 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 17:20:04.624 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 17:20:04.796 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 17:20:05.305 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 17:20:05.348 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:20:05.554 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:20:05.564 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:20:05.575 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:20:05.578 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:20:05.580 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:20:05.582 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 17:20:05.585 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:20:08.334 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:20:08.374 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 17:20:08.387 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 17:20:08.424 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714843208401 with initial instances count: 0
2024-05-04 17:20:08.439 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 17:20:08.455 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714843208454, current=UP, previous=STARTING]
2024-05-04 17:20:08.484 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:20:09.278 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:20:09.640 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 17:20:09.647 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 17:20:09.819 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 29.283 seconds (process running for 36.11)
2024-05-04 17:20:38.386 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:20:38.393 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:20:38.394 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:20:38.395 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:20:38.395 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:20:38.396 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-05-04 17:20:38.396 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:20:38.426 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:25:05.603 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:30:05.592 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:30:33.775 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 17:30:33.777 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714843833777, current=DOWN, previous=UP]
2024-05-04 17:30:33.779 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:30:33.794 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:30:35.844 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 17:30:38.851 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 17:30:38.860 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - deregister  status: 200
2024-05-04 17:30:38.866 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-05-04 17:34:09.684 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-05-04 17:34:10.442 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-05-04 17:34:10.450 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-05-04 17:34:18.656 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-05-04 17:34:19.333 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:34:19.385 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.392 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.500 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.556 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.561 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801008250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.570 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.685 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.734 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.754 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.759 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.764 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.794 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.872 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.875 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.889 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.894 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.919 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.930 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-05-04 17:34:19.950 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:19.959 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-05-04 17:34:30.649 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-05-04 17:34:30.663 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-05-04 17:34:30.677 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-05-04 17:34:30.679 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-05-04 17:34:30.684 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-05-04 17:34:30.689 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-05-04 17:34:30.692 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-05-04 17:34:30.693 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-05-04 17:34:30.696 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-05-04 17:34:30.699 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-05-04 17:34:30.726 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-05-04 17:34:30.757 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-05-04 17:34:30.770 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-05-04 17:34:30.777 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-05-04 17:34:34.898 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-05-04 17:34:35.303 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-05-04 17:34:35.808 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-05-04 17:34:36.276 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-05-04 17:34:36.350 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-05-04 17:34:36.518 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:34:36.520 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:34:36.522 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:34:36.526 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:34:36.528 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:34:36.530 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-05-04 17:34:36.533 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:34:39.615 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:34:39.623 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-05-04 17:34:39.643 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-05-04 17:34:39.678 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1714844079676 with initial instances count: 0
2024-05-04 17:34:39.684 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-05-04 17:34:39.700 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714844079700, current=UP, previous=STARTING]
2024-05-04 17:34:39.706 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:34:40.411 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:34:40.638 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-05-04 17:34:40.645 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-05-04 17:34:40.742 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 33.023 seconds (process running for 38.676)
2024-05-04 17:35:09.625 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-05-04 17:35:09.627 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-05-04 17:35:09.628 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-05-04 17:35:09.629 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-05-04 17:35:09.630 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-05-04 17:35:09.630 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-05-04 17:35:09.631 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-05-04 17:35:09.649 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-05-04 17:37:40.858 WARN [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:25)] - Expired token
2024-05-04 17:37:40.859 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:52)] - invalid access...!
2024-05-04 17:37:54.156 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-05-04 17:37:54.159 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-05-04 17:39:05.047 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-05-04 17:39:05.050 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-05-04 17:39:12.904 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-05-04 17:39:12.906 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1714844352906, current=DOWN, previous=UP]
2024-05-04 17:39:12.907 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088: registering service...
2024-05-04 17:39:12.916 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - registration status: 204
2024-05-04 17:39:14.946 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-05-04 17:39:17.949 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-05-04 17:39:17.958 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6a80ca8515ed:gateway:8088 - deregister  status: 200
2024-05-04 17:39:17.966 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
