2024-04-14 12:28:36.643 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-14 12:28:36.526 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-14 12:28:36.667 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-14 12:28:43.725 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-14 12:28:44.334 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 12:28:44.348 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.356 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.393 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.406 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.411 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801008250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.422 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.467 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.538 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.544 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.554 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.561 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.580 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.659 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.668 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.675 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.688 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.704 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.745 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 12:28:44.757 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:44.799 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 12:28:57.799 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-14 12:28:57.810 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-14 12:28:57.817 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-14 12:28:57.825 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-14 12:28:57.834 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-14 12:28:57.847 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-14 12:28:57.862 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-14 12:28:57.889 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-14 12:28:57.894 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-14 12:28:57.903 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-14 12:28:57.908 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-14 12:28:57.909 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-14 12:28:57.911 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-14 12:28:57.914 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-14 12:28:59.661 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-14 12:28:59.845 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 12:28:59.973 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-14 12:29:00.263 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-14 12:29:00.285 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 12:29:00.392 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 12:29:00.395 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 12:29:00.399 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 12:29:00.404 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 12:29:00.407 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 12:29:00.409 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-14 12:29:00.414 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 12:29:02.741 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 12:29:02.771 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-14 12:29:02.834 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-14 12:29:02.872 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1713097742870 with initial instances count: 0
2024-04-14 12:29:02.889 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-14 12:29:02.891 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713097742891, current=UP, previous=STARTING]
2024-04-14 12:29:02.895 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088: registering service...
2024-04-14 12:29:04.135 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-14 12:29:04.164 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-14 12:29:04.283 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 30.133 seconds (process running for 34.796)
2024-04-14 12:29:04.364 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088 - registration status: 204
2024-04-14 12:29:32.753 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 12:29:32.754 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 12:29:32.755 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 12:29:32.755 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 12:29:32.756 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 12:29:32.756 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-14 12:29:32.757 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 12:29:32.771 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 12:29:36.153 WARN [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:25)] - Expired token
2024-04-14 12:29:36.154 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 12:29:45.224 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:29:45.229 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 12:30:15.311 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:30:15.313 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-14 12:30:15.314 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-14 12:30:25.410 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:30:25.413 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:32:51.621 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:32:51.623 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:32:52.736 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:32:52.738 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:32:53.460 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:32:53.463 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:34:00.416 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 12:37:12.666 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:37:12.668 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-14 12:37:16.868 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:37:16.872 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-14 12:37:23.325 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:37:23.328 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-14 12:37:32.882 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:31)] - Missing authorization header. Access denied
2024-04-14 12:37:42.356 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:37:42.359 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-14 12:37:48.448 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:37:48.450 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-14 12:37:53.716 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:37:53.719 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.UserManagementFilter.lambda$apply$0(UserManagementFilter.java:50)] - Validating token
2024-04-14 12:38:25.791 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:38:25.794 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-14 12:38:25.795 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-14 12:38:37.918 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:38:37.920 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:39:00.418 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 12:39:20.159 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:39:20.161 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:39:39.005 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:39:39.007 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:39:47.996 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:39:47.998 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:39:56.254 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:39:56.256 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:40:00.188 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:40:00.190 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:40:23.289 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:40:23.291 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:40:31.156 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:40:31.158 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:40:40.372 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:40:40.374 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:41:20.252 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:41:20.254 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:41:43.571 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:41:43.573 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 12:41:43.574 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 12:42:13.456 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:42:13.458 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:42:15.116 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:42:15.118 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:42:15.827 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:42:15.829 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:42:52.112 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:42:52.114 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:43:03.473 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:43:03.476 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:43:14.696 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:43:14.699 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:44:00.420 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 12:49:00.422 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 12:54:00.423 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 12:57:27.881 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:57:27.883 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 12:57:36.846 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 12:57:36.847 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 12:57:36.848 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 12:59:00.423 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 13:00:53.846 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:00:53.848 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:01:30.124 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:01:30.125 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 13:01:30.127 WARN [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 13:01:46.393 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:01:46.395 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 13:02:02.318 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:02:02.319 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 13:02:16.252 INFO [reactor-http-epoll-2] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:02:16.253 INFO [reactor-http-epoll-2] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 13:04:00.426 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 13:09:00.429 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 13:09:53.178 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-14 13:09:53.181 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713100193179, current=DOWN, previous=UP]
2024-04-14 13:09:53.182 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088: registering service...
2024-04-14 13:09:53.218 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088 - registration status: 204
2024-04-14 13:09:55.285 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-14 13:09:58.289 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-14 13:09:58.303 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/9a7548b2311a:gateway:8088 - deregister  status: 200
2024-04-14 13:09:58.310 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-04-14 13:10:02.866 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-14 13:10:03.051 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-14 13:10:03.055 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-14 13:10:04.945 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-14 13:10:05.100 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 13:10:05.107 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.111 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.122 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.128 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.131 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801004400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.134 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.148 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.158 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.161 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.163 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.166 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.170 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.185 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.189 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.191 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.196 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.198 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.203 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 13:10:05.206 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:05.210 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 13:10:07.031 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-14 13:10:07.033 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-14 13:10:07.033 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-14 13:10:07.034 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-14 13:10:07.036 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-14 13:10:07.037 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-14 13:10:07.038 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-14 13:10:07.039 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-14 13:10:07.040 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-14 13:10:07.041 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-14 13:10:07.042 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-14 13:10:07.043 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-14 13:10:07.044 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-14 13:10:07.045 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-14 13:10:07.447 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-14 13:10:07.516 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 13:10:07.567 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-14 13:10:07.646 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-14 13:10:07.655 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 13:10:07.688 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 13:10:07.689 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 13:10:07.690 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 13:10:07.691 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 13:10:07.691 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 13:10:07.692 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-14 13:10:07.693 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 13:10:08.221 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 13:10:08.229 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-14 13:10:08.234 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-14 13:10:08.245 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1713100208244 with initial instances count: 4
2024-04-14 13:10:08.250 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-14 13:10:08.252 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713100208251, current=UP, previous=STARTING]
2024-04-14 13:10:08.255 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6d1fc7323e79:gateway:8088: registering service...
2024-04-14 13:10:08.364 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6d1fc7323e79:gateway:8088 - registration status: 204
2024-04-14 13:10:08.699 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-14 13:10:08.704 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-14 13:10:08.771 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 6.667 seconds (process running for 8.727)
2024-04-14 13:10:50.047 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:10:50.050 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-14 13:10:50.051 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-14 13:12:56.138 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:12:56.141 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 13:13:30.677 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:30.679 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:36.649 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:36.651 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:47.973 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:47.977 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:50.131 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:50.134 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:51.719 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:51.723 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:53.080 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:53.083 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:55.023 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:55.026 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:13:57.175 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:13:57.177 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 13:13:57.178 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 13:14:01.678 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:14:01.682 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 13:14:01.683 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 13:14:11.365 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:14:11.366 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 13:15:03.642 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:15:03.644 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 13:15:07.697 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 13:16:46.749 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:16:46.751 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-14 13:16:46.751 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-14 13:18:10.366 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:18:10.369 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:19:26.994 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:19:26.996 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:19:32.633 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:19:32.635 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:19:39.530 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:19:39.533 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:19:43.627 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:19:43.629 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:19:53.998 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:19:53.999 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:07.700 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 13:20:09.010 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:09.014 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:15.776 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:15.777 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:17.719 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:17.720 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:18.623 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:18.625 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:19.341 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:19.344 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:21.994 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:21.996 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:22.856 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:22.858 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:23.514 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:23.516 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:24.168 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:24.170 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:24.982 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:24.984 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:30.788 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:30.790 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:31.610 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:31.613 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:20:32.577 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 13:20:32.580 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 13:23:00.054 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-14 13:23:00.055 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713100980055, current=DOWN, previous=UP]
2024-04-14 13:23:00.056 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/6d1fc7323e79:gateway:8088: registering service...
2024-04-14 13:23:00.065 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/6d1fc7323e79:gateway:8088 - registration status: 204
2024-04-14 13:23:02.083 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-14 13:23:05.088 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-14 13:23:05.093 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/6d1fc7323e79:gateway:8088 - deregister  status: 200
2024-04-14 13:23:05.099 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-04-14 14:13:51.360 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-14 14:13:51.792 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-14 14:13:51.866 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-14 14:13:59.969 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-14 14:14:00.679 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 14:14:00.693 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.706 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.777 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.792 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.801 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x0000000801005c80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.834 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.898 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.947 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.967 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:00.984 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.004 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.026 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.082 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.102 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.140 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.159 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.179 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.188 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 14:14:01.207 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:01.216 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:14:09.534 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-14 14:14:09.539 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-14 14:14:09.540 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-14 14:14:09.544 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-14 14:14:09.555 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-14 14:14:09.556 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-14 14:14:09.558 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-14 14:14:09.561 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-14 14:14:09.564 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-14 14:14:09.568 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-14 14:14:09.571 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-14 14:14:09.588 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-14 14:14:09.590 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-14 14:14:09.591 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-14 14:14:11.703 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-14 14:14:11.952 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 14:14:12.149 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-14 14:14:12.515 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-14 14:14:12.557 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 14:14:12.738 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 14:14:12.741 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 14:14:12.746 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 14:14:12.749 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 14:14:12.752 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 14:14:12.759 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-14 14:14:12.762 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 14:14:15.155 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 14:14:15.163 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-14 14:14:15.178 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-14 14:14:15.201 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1713104055199 with initial instances count: 0
2024-04-14 14:14:15.207 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-14 14:14:15.215 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713104055215, current=UP, previous=STARTING]
2024-04-14 14:14:15.225 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/41e4199eccd5:gateway:8088: registering service...
2024-04-14 14:14:16.697 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/41e4199eccd5:gateway:8088 - registration status: 204
2024-04-14 14:14:17.394 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-14 14:14:17.404 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-14 14:14:17.549 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 28.224 seconds (process running for 34.204)
2024-04-14 14:14:45.150 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 14:14:45.152 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 14:14:45.152 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 14:14:45.153 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 14:14:45.154 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 14:14:45.154 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-14 14:14:45.154 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 14:14:45.172 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 14:15:09.918 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:15:09.922 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:15:14.777 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:15:14.780 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 14:15:14.781 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 14:15:25.352 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:15:25.354 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 14:19:12.782 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 14:20:53.616 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:20:53.618 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 14:21:20.761 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:21:20.763 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:21:40.909 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:21:40.912 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:22:23.726 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:22:23.728 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:22:36.886 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:22:36.889 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:22:55.856 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:22:55.857 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:23:53.550 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:23:53.552 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 14:23:53.553 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 14:24:03.753 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:24:03.755 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 14:24:12.777 INFO [AsyncResolver-bootstrap-executor-0] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 14:24:29.844 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:24:29.846 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-14 14:24:29.847 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-14 14:24:36.470 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:24:36.472 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:24:44.050 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:24:44.052 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 14:25:16.938 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:25:16.940 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 14:25:52.388 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:25:52.390 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:44)] - User does not have CASHIER role. Access denied
2024-04-14 14:25:52.391 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:50)] - invalid access...!
2024-04-14 14:25:58.671 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:25:58.673 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.SellingFilter.lambda$apply$0(SellingFilter.java:48)] - Validating token
2024-04-14 14:26:01.891 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:26:01.892 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:47)] - User does not have MANAGER role. Access denied
2024-04-14 14:26:01.893 WARN [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:54)] - Invalid access..!
2024-04-14 14:26:13.219 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:26:13.222 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
2024-04-14 14:27:07.143 INFO [SpringApplicationShutdownHook] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:62)] - Unregistering application GATEWAY with eureka with status DOWN
2024-04-14 14:27:07.145 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713104827144, current=DOWN, previous=UP]
2024-04-14 14:27:07.145 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/41e4199eccd5:gateway:8088: registering service...
2024-04-14 14:27:07.154 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/41e4199eccd5:gateway:8088 - registration status: 204
2024-04-14 14:27:09.168 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:879)] - Shutting down DiscoveryClient ...
2024-04-14 14:27:12.171 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:915)] - Unregistering ...
2024-04-14 14:27:12.179 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:917)] - DiscoveryClient_GATEWAY/41e4199eccd5:gateway:8088 - deregister  status: 200
2024-04-14 14:27:12.184 INFO [SpringApplicationShutdownHook] [com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:904)] - Completed shut down of DiscoveryClient
2024-04-14 14:30:59.694 INFO [background-preinit] [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] - HV000001: Hibernate Validator 8.0.1.Final
2024-04-14 14:30:59.918 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50)] - Starting GatewayApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/gateway.jar started by root in /)
2024-04-14 14:30:59.923 INFO [main] [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:654)] - No active profile set, falling back to 1 default profile: "default"
2024-04-14 14:31:05.059 INFO [main] [org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:282)] - BeanFactory id=39dfb9c3-314f-31e1-9454-c5c181bf9901
2024-04-14 14:31:05.718 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 14:31:05.733 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.752 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.795 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.818 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.823 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$548/0x000000080100aef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.827 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.917 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:05.963 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.000 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.009 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.016 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.025 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.114 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.127 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.134 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.160 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.176 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.190 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:429)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-14 14:31:06.202 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:06.242 WARN [main] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:437)] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-14 14:31:14.926 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [After]
2024-04-14 14:31:14.942 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Before]
2024-04-14 14:31:14.951 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Between]
2024-04-14 14:31:14.953 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Cookie]
2024-04-14 14:31:14.955 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Header]
2024-04-14 14:31:14.961 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Host]
2024-04-14 14:31:14.963 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Method]
2024-04-14 14:31:14.971 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Path]
2024-04-14 14:31:14.981 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Query]
2024-04-14 14:31:14.991 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [ReadBody]
2024-04-14 14:31:14.992 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [RemoteAddr]
2024-04-14 14:31:14.995 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-04-14 14:31:14.996 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [Weight]
2024-04-14 14:31:14.998 INFO [main] [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.lambda$initFactories$1(RouteDefinitionRouteLocator.java:89)] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-04-14 14:31:16.942 INFO [main] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs(DiscoveryClientOptionalArgsConfiguration.java:74)] - Eureka HTTP Client uses RestTemplate.
2024-04-14 14:31:17.224 WARN [main] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet(LoadBalancerCacheAutoConfiguration.java:94)] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-14 14:31:17.374 INFO [main] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:67)] - Setting initial instance status as: STARTING
2024-04-14 14:31:17.611 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:327)] - Initializing Eureka in region us-east-1
2024-04-14 14:31:17.628 INFO [main] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] - Resolving eureka endpoints via configuration
2024-04-14 14:31:17.701 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 14:31:17.703 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 14:31:17.704 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 14:31:17.705 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 14:31:17.707 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 14:31:17.708 INFO [main] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: true
2024-04-14 14:31:17.710 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 14:31:19.444 INFO [main] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 14:31:19.458 INFO [main] [com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1265)] - Starting heartbeat executor: renew interval is: 30
2024-04-14 14:31:19.484 INFO [main] [com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-14 14:31:19.520 INFO [main] [com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:447)] - Discovery Client initialized at timestamp 1713105079515 with initial instances count: 0
2024-04-14 14:31:19.550 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41)] - Registering application GATEWAY with eureka with status UP
2024-04-14 14:31:19.553 INFO [main] [com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1296)] - Saw local status change event StatusChangeEvent [timestamp=1713105079552, current=UP, previous=STARTING]
2024-04-14 14:31:19.562 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:817)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088: registering service...
2024-04-14 14:31:20.568 INFO [DiscoveryClient-InstanceInfoReplicator-0] [com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] - DiscoveryClient_GATEWAY/380c93a28039:gateway:8088 - registration status: 204
2024-04-14 14:31:20.679 INFO [main] [org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:141)] - Netty started on port 8088
2024-04-14 14:31:20.692 INFO [main] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:144)] - Updating port to 8088
2024-04-14 14:31:20.801 INFO [main] [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:56)] - Started GatewayApplication in 22.71 seconds (process running for 26.735)
2024-04-14 14:31:49.458 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:951)] - Disable delta property : false
2024-04-14 14:31:49.459 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:952)] - Single vip registry refresh property : null
2024-04-14 14:31:49.460 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:953)] - Force full registry fetch : false
2024-04-14 14:31:49.461 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:954)] - Application is null : false
2024-04-14 14:31:49.462 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:955)] - Registered Applications size is zero : true
2024-04-14 14:31:49.463 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:957)] - Application version is -1: false
2024-04-14 14:31:49.464 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1041)] - Getting all instance registry info from the eureka server
2024-04-14 14:31:49.476 INFO [DiscoveryClient-CacheRefreshExecutor-0] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1050)] - The response status is 200
2024-04-14 14:31:50.383 INFO [reactor-http-epoll-3] [com.toyota.gateway.util.JwtUtil.validateToken(JwtUtil.java:22)] - Token has validated
2024-04-14 14:31:50.387 INFO [reactor-http-epoll-3] [com.toyota.gateway.filter.ReportFilter.lambda$apply$0(ReportFilter.java:51)] - Token has verified.
