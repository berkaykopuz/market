version: "3.7"
services:

  ## PostgreSQL Docker Compose
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: marketdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres
    ports:
      - "5432:5432"
    expose:
      - "5432"
    command: -p 5432
    restart: always

  ## Eureka Server
  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    build: ./eureka-server

  # Gateway
  gateway:
    image: gateway:latest
    container_name: gateway
    volumes:
      - ./logs:/app/logs
    ports:
      - "8088:8088"
    expose:
      - "8088"
    depends_on:
      - eureka-server
      - token
      - user-management
      - product
      - selling
      - report
    build: ./gateway

  # User Management
  user-management:
    container_name: user-management
    image: user-management:latest
    volumes:
      - ./logs:/app/logs
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/marketdb
    depends_on:
      - postgres
      - eureka-server
    build: ./user-management

  # Product
  product:
    container_name: product
    image: product:latest
    volumes:
      - ./logs:/app/logs
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/marketdb
    depends_on:
      - postgres
      - eureka-server
    build:
      context: ./product

  # Selling
  selling:
    container_name: selling
    image: selling:latest
    volumes:
      - ./logs:/app/logs
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/marketdb
    depends_on:
      - postgres
      - eureka-server
    build:
      context: ./selling

  # Report
  report:
    container_name: report
    image: report:latest
    volumes:
      - ./logs:/app/logs
      - /app/images
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/marketdb
    depends_on:
      - postgres
      - eureka-server
    build:
      context: ./report

  #Token
  token:
    container_name: token
    image: token:latest
    volumes:
      - ./logs:/app/logs
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/marketdb
    depends_on:
      - postgres
      - eureka-server
    build: ./token

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch_springboot
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logs:/app/logs
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

networks:
  market:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local